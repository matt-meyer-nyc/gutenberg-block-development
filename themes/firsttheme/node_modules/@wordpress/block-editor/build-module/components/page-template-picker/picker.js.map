{"version":3,"sources":["@wordpress/block-editor/src/components/page-template-picker/picker.js"],"names":["useState","parse","useDispatch","Button","Container","getDefaultTemplates","Preview","__experimentalPageTemplatePicker","templates","editPost","templatePreview","setTemplatePreview","onApply","title","name","blocks","content","undefined","map","template","icon"],"mappings":";;;AAAA;;;AAGA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,OAElC;AAAA,4BADNC,SACM;AAAA,MADNA,SACM,+BADMH,mBAAmB,EACzB;;AAAA,qBACeH,WAAW,CAAE,aAAF,CAD1B;AAAA,MACEO,QADF,gBACEA,QADF;;AAAA,kBAE0CT,QAAQ,EAFlD;AAAA;AAAA,MAEEU,eAFF;AAAA,MAEmBC,kBAFnB;;AAIN,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACrBH,IAAAA,QAAQ,CAAE;AACTI,MAAAA,KAAK,EAAEH,eAAe,CAACI,IADd;AAETC,MAAAA,MAAM,EAAEd,KAAK,CAAES,eAAe,CAACM,OAAlB;AAFJ,KAAF,CAAR;AAIAL,IAAAA,kBAAkB,CAAEM,SAAF,CAAlB;AACA,GAND;;AAQA,SACC,8BACC,cAAC,SAAD,QACGT,SAAS,CAACU,GAAV,CAAe,UAAEC,QAAF;AAAA,WAChB,cAAC,MAAD;AACC,MAAA,GAAG,EAAGA,QAAQ,CAACL,IADhB;AAEC,MAAA,IAAI,EAAGK,QAAQ,CAACC,IAFjB;AAGC,MAAA,KAAK,EAAGD,QAAQ,CAACL,IAHlB;AAIC,MAAA,OAAO,EAAG;AAAA,eAAMH,kBAAkB,CAAEQ,QAAF,CAAxB;AAAA;AAJX,MADgB;AAAA,GAAf,CADH,CADD,EAWC,cAAC,OAAD;AACC,IAAA,QAAQ,EAAGT,eADZ;AAEC,IAAA,SAAS,EAAG;AAAA,aAAMC,kBAAkB,CAAEM,SAAF,CAAxB;AAAA,KAFb;AAGC,IAAA,OAAO,EAAGL;AAHX,IAXD,CADD;AAmBA,CAjCD;;AAmCA,eAAeL,gCAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { parse } from '@wordpress/blocks';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Button from './button';\nimport Container from './container';\nimport getDefaultTemplates from './default-templates';\nimport Preview from './preview';\n\nconst __experimentalPageTemplatePicker = ( {\n\ttemplates = getDefaultTemplates(),\n} ) => {\n\tconst { editPost } = useDispatch( 'core/editor' );\n\tconst [ templatePreview, setTemplatePreview ] = useState();\n\n\tconst onApply = () => {\n\t\teditPost( {\n\t\t\ttitle: templatePreview.name,\n\t\t\tblocks: parse( templatePreview.content ),\n\t\t} );\n\t\tsetTemplatePreview( undefined );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t{ templates.map( ( template ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={ template.name }\n\t\t\t\t\t\ticon={ template.icon }\n\t\t\t\t\t\tlabel={ template.name }\n\t\t\t\t\t\tonPress={ () => setTemplatePreview( template ) }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</Container>\n\t\t\t<Preview\n\t\t\t\ttemplate={ templatePreview }\n\t\t\t\tonDismiss={ () => setTemplatePreview( undefined ) }\n\t\t\t\tonApply={ onApply }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default __experimentalPageTemplatePicker;\n"]}