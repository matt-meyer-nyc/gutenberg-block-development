{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/index.native.js"],"names":["identity","View","Platform","TouchableWithoutFeedback","Component","withDispatch","withSelect","compose","withPreferredColorScheme","createBlock","KeyboardAwareFlatList","ReadableContentView","styles","BlockListBlock","BlockListAppender","BlockInsertionPoint","__experimentalBlockListFooter","innerToolbarHeight","BlockList","arguments","renderItem","bind","renderBlockListFooter","renderDefaultBlockAppender","onCaretVerticalPositionChange","scrollViewInnerRef","addBlockToEndOfPost","shouldFlatListPreventAutomaticScroll","shouldShowInnerBlockAppender","newBlock","props","insertBlock","blockCount","targetId","caretY","previousCaretY","handleCaretVerticalPositionChange","scrollViewRef","ref","isBlockInsertionPointVisible","shouldShowInsertionPointBefore","willShowInsertionPoint","rootClientId","renderAppender","blockClientIds","length","clearSelectedBlock","isFullyBordered","title","header","withFooter","isReadOnly","isRootList","flex","OS","removeClippedSubviews","autoScroll","paddingToContent","clientId","item","shouldShowInsertionPointAfter","paragraphBlock","blockListFooter","select","getBlockCount","getBlockOrder","getSelectedBlockClientId","getBlockInsertionPoint","getSettings","selectedBlockClientId","insertionPoint","blockInsertionPointIsVisible","index","readOnly","undefined","dispatch","replaceBlock"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { identity } from 'lodash';\nimport { View, Platform, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tKeyboardAwareFlatList,\n\tReadableContentView,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\nimport BlockListBlock from './block';\nimport BlockListAppender from '../block-list-appender';\nimport BlockInsertionPoint from './insertion-point';\nimport __experimentalBlockListFooter from '../block-list-footer';\n\nconst innerToolbarHeight = 44;\n\nexport class BlockList extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.renderItem = this.renderItem.bind( this );\n\t\tthis.renderBlockListFooter = this.renderBlockListFooter.bind( this );\n\t\tthis.renderDefaultBlockAppender = this.renderDefaultBlockAppender.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onCaretVerticalPositionChange = this.onCaretVerticalPositionChange.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.scrollViewInnerRef = this.scrollViewInnerRef.bind( this );\n\t\tthis.addBlockToEndOfPost = this.addBlockToEndOfPost.bind( this );\n\t\tthis.shouldFlatListPreventAutomaticScroll = this.shouldFlatListPreventAutomaticScroll.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.shouldShowInnerBlockAppender = this.shouldShowInnerBlockAppender.bind(\n\t\t\tthis\n\t\t);\n\t}\n\n\taddBlockToEndOfPost( newBlock ) {\n\t\tthis.props.insertBlock( newBlock, this.props.blockCount );\n\t}\n\n\tonCaretVerticalPositionChange( targetId, caretY, previousCaretY ) {\n\t\tKeyboardAwareFlatList.handleCaretVerticalPositionChange(\n\t\t\tthis.scrollViewRef,\n\t\t\ttargetId,\n\t\t\tcaretY,\n\t\t\tpreviousCaretY\n\t\t);\n\t}\n\n\tscrollViewInnerRef( ref ) {\n\t\tthis.scrollViewRef = ref;\n\t}\n\n\tshouldFlatListPreventAutomaticScroll() {\n\t\treturn this.props.isBlockInsertionPointVisible;\n\t}\n\n\trenderDefaultBlockAppender() {\n\t\tconst { shouldShowInsertionPointBefore } = this.props;\n\t\tconst willShowInsertionPoint = shouldShowInsertionPointBefore(); // call without the client_id argument since this is the appender\n\t\treturn (\n\t\t\t<ReadableContentView>\n\t\t\t\t<BlockListAppender // show the default appender, anormal, when not inserting a block\n\t\t\t\t\trootClientId={ this.props.rootClientId }\n\t\t\t\t\trenderAppender={ this.props.renderAppender }\n\t\t\t\t\tshowSeparator={ willShowInsertionPoint }\n\t\t\t\t/>\n\t\t\t</ReadableContentView>\n\t\t);\n\t}\n\n\tshouldShowInnerBlockAppender() {\n\t\tconst { blockClientIds, renderAppender } = this.props;\n\t\treturn renderAppender && blockClientIds.length > 0;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclearSelectedBlock,\n\t\t\tblockClientIds,\n\t\t\tisFullyBordered,\n\t\t\ttitle,\n\t\t\theader,\n\t\t\twithFooter = true,\n\t\t\tisReadOnly,\n\t\t\tisRootList,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ { flex: isRootList ? 1 : 0 } }\n\t\t\t\tonAccessibilityEscape={ clearSelectedBlock }\n\t\t\t>\n\t\t\t\t<KeyboardAwareFlatList\n\t\t\t\t\t{ ...( Platform.OS === 'android'\n\t\t\t\t\t\t? { removeClippedSubviews: false }\n\t\t\t\t\t\t: {} ) } // Disable clipping on Android to fix focus losing. See https://github.com/wordpress-mobile/gutenberg-mobile/pull/741#issuecomment-472746541\n\t\t\t\t\taccessibilityLabel=\"block-list\"\n\t\t\t\t\tautoScroll={ this.props.autoScroll }\n\t\t\t\t\tinnerRef={ this.scrollViewInnerRef }\n\t\t\t\t\textraScrollHeight={ innerToolbarHeight + 10 }\n\t\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t\t\tscrollViewStyle={ { flex: isRootList ? 1 : 0 } }\n\t\t\t\t\tdata={ blockClientIds }\n\t\t\t\t\textraData={ [ isFullyBordered ] }\n\t\t\t\t\tkeyExtractor={ identity }\n\t\t\t\t\trenderItem={ this.renderItem }\n\t\t\t\t\tshouldPreventAutomaticScroll={\n\t\t\t\t\t\tthis.shouldFlatListPreventAutomaticScroll\n\t\t\t\t\t}\n\t\t\t\t\ttitle={ title }\n\t\t\t\t\tListHeaderComponent={ ! isReadOnly && header }\n\t\t\t\t\tListEmptyComponent={\n\t\t\t\t\t\t! isReadOnly && this.renderDefaultBlockAppender\n\t\t\t\t\t}\n\t\t\t\t\tListFooterComponent={\n\t\t\t\t\t\t! isReadOnly && withFooter && this.renderBlockListFooter\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t{ this.shouldShowInnerBlockAppender() && (\n\t\t\t\t\t<View style={ styles.paddingToContent }>\n\t\t\t\t\t\t<BlockListAppender\n\t\t\t\t\t\t\trootClientId={ this.props.rootClientId }\n\t\t\t\t\t\t\trenderAppender={ this.props.renderAppender }\n\t\t\t\t\t\t\tshowSeparator\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t);\n\t}\n\n\trenderItem( { item: clientId } ) {\n\t\tconst {\n\t\t\tisReadOnly,\n\t\t\tshouldShowInsertionPointBefore,\n\t\t\tshouldShowInsertionPointAfter,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<ReadableContentView>\n\t\t\t\t<View pointerEvents={ isReadOnly ? 'box-only' : 'auto' }>\n\t\t\t\t\t{ shouldShowInsertionPointBefore( clientId ) && (\n\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t) }\n\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\tkey={ clientId }\n\t\t\t\t\t\tshowTitle={ false }\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\trootClientId={ this.props.rootClientId }\n\t\t\t\t\t\tonCaretVerticalPositionChange={\n\t\t\t\t\t\t\tthis.onCaretVerticalPositionChange\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisSmallScreen={ ! this.props.isFullyBordered }\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! this.shouldShowInnerBlockAppender() &&\n\t\t\t\t\t\tshouldShowInsertionPointAfter( clientId ) && (\n\t\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t</ReadableContentView>\n\t\t);\n\t}\n\n\trenderBlockListFooter() {\n\t\tconst paragraphBlock = createBlock( 'core/paragraph' );\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\tonPress={ () => {\n\t\t\t\t\t\tthis.addBlockToEndOfPost( paragraphBlock );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<View style={ styles.blockListFooter } />\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t<__experimentalBlockListFooter.Slot />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { rootClientId } ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockOrder,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockInsertionPoint,\n\t\t\tisBlockInsertionPointVisible,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst blockClientIds = getBlockOrder( rootClientId );\n\t\tconst insertionPoint = getBlockInsertionPoint();\n\t\tconst blockInsertionPointIsVisible = isBlockInsertionPointVisible();\n\t\tconst shouldShowInsertionPointBefore = ( clientId ) => {\n\t\t\treturn (\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if list is empty, show the insertion point (via the default appender)\n\t\t\t\t( blockClientIds.length === 0 ||\n\t\t\t\t\t// or if the insertion point is right before the denoted block\n\t\t\t\t\tblockClientIds[ insertionPoint.index ] === clientId )\n\t\t\t);\n\t\t};\n\t\tconst shouldShowInsertionPointAfter = ( clientId ) => {\n\t\t\treturn (\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if the insertion point is at the end of the list\n\t\t\t\tblockClientIds.length === insertionPoint.index &&\n\t\t\t\t// and the denoted block is the last one on the list, show the indicator at the end of the block\n\t\t\t\tblockClientIds[ insertionPoint.index - 1 ] === clientId\n\t\t\t);\n\t\t};\n\n\t\tconst isReadOnly = getSettings().readOnly;\n\n\t\treturn {\n\t\t\tblockClientIds,\n\t\t\tblockCount: getBlockCount( rootClientId ),\n\t\t\tisBlockInsertionPointVisible: isBlockInsertionPointVisible(),\n\t\t\tshouldShowInsertionPointBefore,\n\t\t\tshouldShowInsertionPointAfter,\n\t\t\tselectedBlockClientId,\n\t\t\tisReadOnly,\n\t\t\tisRootList: rootClientId === undefined,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { insertBlock, replaceBlock, clearSelectedBlock } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\treturn {\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n\twithPreferredColorScheme,\n] )( BlockList );\n"]}