{"version":3,"sources":["@wordpress/block-editor/src/components/block-inspector/index.js"],"names":["__","getBlockType","getUnregisteredTypeHandlerName","PanelBody","__experimentalSlotFillConsumer","withSelect","SkipToSelectedBlock","BlockCard","InspectorControls","InspectorAdvancedControls","BlockStyles","MultiSelectionInspector","DefaultStylePicker","BlockInspector","blockType","count","hasBlockStyles","selectedBlockClientId","selectedBlockName","showNoBlockSelectedMessage","isSelectedBlockUnregistered","name","hasFills","slotName","select","getSelectedBlockClientId","getSelectedBlockCount","getBlockName","getBlockStyles","blockStyles","length"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tgetBlockType,\n\tgetUnregisteredTypeHandlerName,\n} from '@wordpress/blocks';\nimport {\n\tPanelBody,\n\t__experimentalSlotFillConsumer,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport SkipToSelectedBlock from '../skip-to-selected-block';\nimport BlockCard from '../block-card';\nimport InspectorControls from '../inspector-controls';\nimport InspectorAdvancedControls from '../inspector-advanced-controls';\nimport BlockStyles from '../block-styles';\nimport MultiSelectionInspector from '../multi-selection-inspector';\nimport DefaultStylePicker from '../default-style-picker';\nconst BlockInspector = ( {\n\tblockType,\n\tcount,\n\thasBlockStyles,\n\tselectedBlockClientId,\n\tselectedBlockName,\n\tshowNoBlockSelectedMessage = true,\n} ) => {\n\tif ( count > 1 ) {\n\t\treturn <MultiSelectionInspector />;\n\t}\n\n\tconst isSelectedBlockUnregistered =\n\t\tselectedBlockName === getUnregisteredTypeHandlerName();\n\n\t/*\n\t * If the selected block is of an unregistered type, avoid showing it as an actual selection\n\t * because we want the user to focus on the unregistered block warning, not block settings.\n\t */\n\tif (\n\t\t! blockType ||\n\t\t! selectedBlockClientId ||\n\t\tisSelectedBlockUnregistered\n\t) {\n\t\tif ( showNoBlockSelectedMessage ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\n\t\t\t\t\t{ __( 'No block selected.' ) }\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"block-editor-block-inspector\">\n\t\t\t<BlockCard blockType={ blockType } />\n\t\t\t{ hasBlockStyles && (\n\t\t\t\t<div>\n\t\t\t\t\t<PanelBody title={ __( 'Styles' ) } initialOpen={ false }>\n\t\t\t\t\t\t<BlockStyles clientId={ selectedBlockClientId } />\n\t\t\t\t\t\t<DefaultStylePicker blockName={ blockType.name } />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<InspectorControls.Slot bubblesVirtually />\n\t\t\t<div>\n\t\t\t\t<__experimentalSlotFillConsumer>\n\t\t\t\t\t{ ( { hasFills } ) =>\n\t\t\t\t\t\thasFills( InspectorAdvancedControls.slotName ) && (\n\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\tclassName=\"block-editor-block-inspector__advanced\"\n\t\t\t\t\t\t\t\ttitle={ __( 'Advanced' ) }\n\t\t\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InspectorAdvancedControls.Slot\n\t\t\t\t\t\t\t\t\tbubblesVirtually\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</__experimentalSlotFillConsumer>\n\t\t\t</div>\n\t\t\t<SkipToSelectedBlock key=\"back\" />\n\t\t</div>\n\t);\n};\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetSelectedBlockCount,\n\t\tgetBlockName,\n\t} = select( 'core/block-editor' );\n\tconst { getBlockStyles } = select( 'core/blocks' );\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectedBlockName =\n\t\tselectedBlockClientId && getBlockName( selectedBlockClientId );\n\tconst blockType =\n\t\tselectedBlockClientId && getBlockType( selectedBlockName );\n\tconst blockStyles =\n\t\tselectedBlockClientId && getBlockStyles( selectedBlockName );\n\treturn {\n\t\tcount: getSelectedBlockCount(),\n\t\thasBlockStyles: blockStyles && blockStyles.length > 0,\n\t\tselectedBlockName,\n\t\tselectedBlockClientId,\n\t\tblockType,\n\t};\n} )( BlockInspector );\n"]}