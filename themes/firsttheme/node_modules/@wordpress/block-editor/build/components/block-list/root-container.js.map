{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/root-container.js"],"names":["Context","BlockNodes","selector","select","getSelectedBlockClientId","hasMultiSelection","isMultiSelecting","selectedBlockClientId","onDragStart","event","target","preventDefault","RootContainer","ref","children","className","hasPopover","selectBlock","onSelectionStart","onFocus","clientId"],"mappings":";;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AAZA;;;;AAMA;;;;AAQA;AAEO,IAAMA,OAAO,GAAG,6BAAhB;;AACA,IAAMC,UAAU,GAAG,6BAAnB;;;AAEP,SAASC,QAAT,CAAmBC,MAAnB,EAA4B;AAAA,gBAKvBA,MAAM,CAAE,mBAAF,CALiB;AAAA,MAE1BC,wBAF0B,WAE1BA,wBAF0B;AAAA,MAG1BC,iBAH0B,WAG1BA,iBAH0B;AAAA,MAI1BC,gBAJ0B,WAI1BA,gBAJ0B;;AAO3B,SAAO;AACNC,IAAAA,qBAAqB,EAAEH,wBAAwB,EADzC;AAENC,IAAAA,iBAAiB,EAAEA,iBAAiB,EAF9B;AAGNC,IAAAA,gBAAgB,EAAEA,gBAAgB;AAH5B,GAAP;AAKA;AAED;;;;;;;;;;AAQA,SAASE,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B;AACA,MAAK,2BAAkBA,KAAK,CAACC,MAAxB,CAAL,EAAwC;AACvCD,IAAAA,KAAK,CAACE,cAAN;AACA;AACD;;AAED,SAASC,aAAT,OAAoEC,GAApE,EAA0E;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;AAAA,MAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,6BAA3BC,UAA2B;AAAA,MAA3BA,UAA2B,gCAAd,IAAc;;AAAA,mBAKrE,qBAAWd,QAAX,EAAqB,EAArB,CALqE;AAAA,MAExEK,qBAFwE,cAExEA,qBAFwE;AAAA,MAGxEF,iBAHwE,cAGxEA,iBAHwE;AAAA,MAIxEC,gBAJwE,cAIxEA,gBAJwE;;AAAA,qBAMjD,uBAAa,mBAAb,CANiD;AAAA,MAMjEW,WANiE,gBAMjEA,WANiE;;AAOzE,MAAMC,gBAAgB,GAAG,gCAAmBL,GAAnB,CAAzB;AAEA;;;;;;;;AAOA,WAASM,OAAT,CAAkBV,KAAlB,EAA0B;AACzB,QAAKJ,iBAAL,EAAyB;AACxB;AACA;;AAED,QAAMe,QAAQ,GAAG,2BAAkBX,KAAK,CAACC,MAAxB,CAAjB;;AAEA,QAAKU,QAAQ,IAAIA,QAAQ,KAAKb,qBAA9B,EAAsD;AACrDU,MAAAA,WAAW,CAAEG,QAAF,CAAX;AACA;AACD;;AAED,SACC,4BAAC,uBAAD;AACC,IAAA,SAAS,EAAGL,SADb;AAEC,IAAA,gBAAgB,EAAGT,gBAFpB;AAGC,IAAA,iBAAiB,EAAGD,iBAHrB;AAIC,IAAA,qBAAqB,EAAGE,qBAJzB;AAKC,IAAA,YAAY,EAAGM;AALhB,KAOC,4BAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAG,uBAAU,EAAV;AAA7B,KACGG,UAAU,GAAG,4BAAC,qBAAD,OAAH,GAAsB,IADnC,EAEC;AACC,IAAA,GAAG,EAAGH,GADP;AAEC,IAAA,SAAS,EAAGE,SAFb;AAGC,IAAA,OAAO,EAAGI,OAHX;AAIC,IAAA,WAAW,EAAGX;AAJf,KAMC,4BAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAGU;AAA1B,KACGJ,QADH,CAND,CAFD,CAPD,CADD;AAuBA;;eAEc,yBAAYF,aAAZ,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext, forwardRef, useState } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport useMultiSelection from './use-multi-selection';\nimport { getBlockClientId } from '../../utils/dom';\nimport InsertionPoint from './insertion-point';\nimport BlockPopover from './block-popover';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\nexport const Context = createContext();\nexport const BlockNodes = createContext();\n\nfunction selector( select ) {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\thasMultiSelection,\n\t\tisMultiSelecting,\n\t} = select( 'core/block-editor' );\n\n\treturn {\n\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t};\n}\n\n/**\n * Prevents default dragging behavior within a block.\n * To do: we must handle this in the future and clean up the drag target.\n * Previously dragging was prevented for multi-selected, but this is no longer\n * needed.\n *\n * @param {WPSyntheticEvent} event Synthetic drag event.\n */\nfunction onDragStart( event ) {\n\t// Ensure we target block content, not block controls.\n\tif ( getBlockClientId( event.target ) ) {\n\t\tevent.preventDefault();\n\t}\n}\n\nfunction RootContainer( { children, className, hasPopover = true }, ref ) {\n\tconst {\n\t\tselectedBlockClientId,\n\t\thasMultiSelection,\n\t\tisMultiSelecting,\n\t} = useSelect( selector, [] );\n\tconst { selectBlock } = useDispatch( 'core/block-editor' );\n\tconst onSelectionStart = useMultiSelection( ref );\n\n\t/**\n\t * Marks the block as selected when focused and not already selected. This\n\t * specifically handles the case where block does not set focus on its own\n\t * (via `setFocus`), typically if there is no focusable input in the block.\n\t *\n\t * @param {WPSyntheticEvent} event\n\t */\n\tfunction onFocus( event ) {\n\t\tif ( hasMultiSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst clientId = getBlockClientId( event.target );\n\n\t\tif ( clientId && clientId !== selectedBlockClientId ) {\n\t\t\tselectBlock( clientId );\n\t\t}\n\t}\n\n\treturn (\n\t\t<InsertionPoint\n\t\t\tclassName={ className }\n\t\t\tisMultiSelecting={ isMultiSelecting }\n\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\tselectedBlockClientId={ selectedBlockClientId }\n\t\t\tcontainerRef={ ref }\n\t\t>\n\t\t\t<BlockNodes.Provider value={ useState( {} ) }>\n\t\t\t\t{ hasPopover ? <BlockPopover /> : null }\n\t\t\t\t<div\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\tonDragStart={ onDragStart }\n\t\t\t\t>\n\t\t\t\t\t<Context.Provider value={ onSelectionStart }>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</Context.Provider>\n\t\t\t\t</div>\n\t\t\t</BlockNodes.Provider>\n\t\t</InsertionPoint>\n\t);\n}\n\nexport default forwardRef( RootContainer );\n"]}