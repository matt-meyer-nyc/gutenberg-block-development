{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/index.js"],"names":["wrapperClasses","classes","getMultilineTag","multiline","getAllowedFormats","allowedFormats","formattingControls","alternative","map","name","RichTextWrapper","forwardedRef","children","tagName","originalValue","value","originalOnChange","onChange","originalIsSelected","isSelected","inlineToolbar","wrapperClassName","className","autocompleters","onReplace","placeholder","keepPlaceholderOnFocus","withoutInteractiveFormatting","onRemove","onMerge","onSplit","onSplitMiddle","__unstableOnSplitMiddle","identifier","startAttr","start","reversed","style","preserveWhiteSpace","__unstableEmbedURLOnPaste","props","instanceId","fallbackRef","ref","clientId","onCaretVerticalPositionChange","blockIsSelected","selector","select","isCaretWithinFormattedText","getSelectionStart","getSelectionEnd","getSettings","didAutomaticChange","__unstableGetBlockWithoutInnerBlocks","isMultiSelecting","hasMultiSelection","selectionStart","selectionEnd","__experimentalCanUserUseUnfilteredHTML","undo","__experimentalUndo","undefined","attributeKey","extraProps","Platform","OS","block","shouldBlurOnUnmount","canUserUseUnfilteredHTML","offset","disabled","__unstableMarkLastChangeAsPersistent","enterFormattedText","exitFormattedText","selectionChange","__unstableMarkAutomaticChange","multilineTag","adjustedAllowedFormats","hasFormats","length","adjustedValue","adjustedOnChange","Array","isArray","childrenSource","toHTML","newValue","fromDOM","document","childNodes","onSelectionChange","end","onDelete","isReverse","splitValue","record","pastedBlocks","blocks","before","after","hasPastedBlocks","push","indexToSelect","onEnter","shiftKey","canSplit","transforms","filter","type","transformation","item","regExp","test","text","transform","content","onPaste","html","plainText","files","activeFormats","HTML","mode","window","console","log","trim","valueToInsert","index","formats","LINE_SEPARATOR","inputRule","valueToFormat","characterBefore","slice","trimmedTextBefore","prefixTransforms","prefix","nestedIsSelected","onFocus","Editable","current","listBoxId","activeId","onKeyDown","ForwardedRichTextContainer","Content","Tag","MultilineTag","isEmpty","defaultProps","format"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tRawHTML,\n\tPlatform,\n\tuseRef,\n\tuseCallback,\n\tforwardRef,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tpasteHandler,\n\tchildren as childrenSource,\n\tgetBlockTransforms,\n\tfindTransform,\n\tisUnmodifiedDefaultBlock,\n} from '@wordpress/blocks';\nimport { useInstanceId } from '@wordpress/compose';\nimport {\n\t__experimentalRichText as RichText,\n\t__unstableCreateElement,\n\tisEmpty,\n\t__unstableIsEmptyLine as isEmptyLine,\n\tinsert,\n\t__unstableInsertLineSeparator as insertLineSeparator,\n\tcreate,\n\treplace,\n\tsplit,\n\t__UNSTABLE_LINE_SEPARATOR as LINE_SEPARATOR,\n\ttoHTMLString,\n\tslice,\n} from '@wordpress/rich-text';\nimport deprecated from '@wordpress/deprecated';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport Autocomplete from '../autocomplete';\nimport { useBlockEditContext } from '../block-edit';\nimport { RemoveBrowserShortcuts } from './remove-browser-shortcuts';\nimport { filePasteHandler } from './file-paste-handler';\nimport FormatToolbarContainer from './format-toolbar-container';\n\nconst wrapperClasses = 'block-editor-rich-text';\nconst classes = 'block-editor-rich-text__editable';\n\n/**\n * Get the multiline tag based on the multiline prop.\n *\n * @param {?(string|boolean)} multiline The multiline prop.\n *\n * @return {?string} The multiline tag.\n */\nfunction getMultilineTag( multiline ) {\n\tif ( multiline !== true && multiline !== 'p' && multiline !== 'li' ) {\n\t\treturn;\n\t}\n\n\treturn multiline === true ? 'p' : multiline;\n}\n\nfunction getAllowedFormats( { allowedFormats, formattingControls } ) {\n\tif ( ! allowedFormats && ! formattingControls ) {\n\t\treturn;\n\t}\n\n\tif ( allowedFormats ) {\n\t\treturn allowedFormats;\n\t}\n\n\tdeprecated( 'wp.blockEditor.RichText formattingControls prop', {\n\t\talternative: 'allowedFormats',\n\t} );\n\n\treturn formattingControls.map( ( name ) => `core/${ name }` );\n}\n\nfunction RichTextWrapper(\n\t{\n\t\tchildren,\n\t\ttagName,\n\t\tvalue: originalValue,\n\t\tonChange: originalOnChange,\n\t\tisSelected: originalIsSelected,\n\t\tmultiline,\n\t\tinlineToolbar,\n\t\twrapperClassName,\n\t\tclassName,\n\t\tautocompleters,\n\t\tonReplace,\n\t\tplaceholder,\n\t\tkeepPlaceholderOnFocus,\n\t\tallowedFormats,\n\t\tformattingControls,\n\t\twithoutInteractiveFormatting,\n\t\tonRemove,\n\t\tonMerge,\n\t\tonSplit,\n\t\t__unstableOnSplitMiddle: onSplitMiddle,\n\t\tidentifier,\n\t\t// To do: find a better way to implicitly inherit props.\n\t\tstart: startAttr,\n\t\treversed,\n\t\tstyle,\n\t\tpreserveWhiteSpace,\n\t\t__unstableEmbedURLOnPaste,\n\t\t...props\n\t},\n\tforwardedRef\n) {\n\tconst instanceId = useInstanceId( RichTextWrapper );\n\n\tidentifier = identifier || instanceId;\n\n\tconst fallbackRef = useRef();\n\tconst ref = forwardedRef || fallbackRef;\n\tconst {\n\t\tclientId,\n\t\tonCaretVerticalPositionChange,\n\t\tisSelected: blockIsSelected,\n\t} = useBlockEditContext();\n\tconst selector = ( select ) => {\n\t\tconst {\n\t\t\tisCaretWithinFormattedText,\n\t\t\tgetSelectionStart,\n\t\t\tgetSelectionEnd,\n\t\t\tgetSettings,\n\t\t\tdidAutomaticChange,\n\t\t\t__unstableGetBlockWithoutInnerBlocks,\n\t\t\tisMultiSelecting,\n\t\t\thasMultiSelection,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectionStart = getSelectionStart();\n\t\tconst selectionEnd = getSelectionEnd();\n\t\tconst {\n\t\t\t__experimentalCanUserUseUnfilteredHTML,\n\t\t\t__experimentalUndo: undo,\n\t\t} = getSettings();\n\n\t\tlet isSelected;\n\n\t\tif ( originalIsSelected === undefined ) {\n\t\t\tisSelected =\n\t\t\t\tselectionStart.clientId === clientId &&\n\t\t\t\tselectionStart.attributeKey === identifier;\n\t\t} else if ( originalIsSelected ) {\n\t\t\tisSelected = selectionStart.clientId === clientId;\n\t\t}\n\n\t\tlet extraProps = {};\n\t\tif ( Platform.OS === 'native' ) {\n\t\t\t// If the block of this RichText is unmodified then it's a candidate for replacing when adding a new block.\n\t\t\t// In order to fix https://github.com/wordpress-mobile/gutenberg-mobile/issues/1126, let's blur on unmount in that case.\n\t\t\t// This apparently assumes functionality the BlockHlder actually\n\t\t\tconst block =\n\t\t\t\tclientId && __unstableGetBlockWithoutInnerBlocks( clientId );\n\t\t\tconst shouldBlurOnUnmount =\n\t\t\t\tblock && isSelected && isUnmodifiedDefaultBlock( block );\n\t\t\textraProps = {\n\t\t\t\tshouldBlurOnUnmount,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tcanUserUseUnfilteredHTML: __experimentalCanUserUseUnfilteredHTML,\n\t\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\t\tselectionStart: isSelected ? selectionStart.offset : undefined,\n\t\t\tselectionEnd: isSelected ? selectionEnd.offset : undefined,\n\t\t\tisSelected,\n\t\t\tdidAutomaticChange: didAutomaticChange(),\n\t\t\tdisabled: isMultiSelecting() || hasMultiSelection(),\n\t\t\tundo,\n\t\t\t...extraProps,\n\t\t};\n\t};\n\t// This selector must run on every render so the right selection state is\n\t// retreived from the store on merge.\n\t// To do: fix this somehow.\n\tconst {\n\t\tcanUserUseUnfilteredHTML,\n\t\tisCaretWithinFormattedText,\n\t\tselectionStart,\n\t\tselectionEnd,\n\t\tisSelected,\n\t\tdidAutomaticChange,\n\t\tdisabled,\n\t\tundo,\n\t\tshouldBlurOnUnmount,\n\t} = useSelect( selector );\n\tconst {\n\t\t__unstableMarkLastChangeAsPersistent,\n\t\tenterFormattedText,\n\t\texitFormattedText,\n\t\tselectionChange,\n\t\t__unstableMarkAutomaticChange,\n\t} = useDispatch( 'core/block-editor' );\n\tconst multilineTag = getMultilineTag( multiline );\n\tconst adjustedAllowedFormats = getAllowedFormats( {\n\t\tallowedFormats,\n\t\tformattingControls,\n\t} );\n\tconst hasFormats =\n\t\t! adjustedAllowedFormats || adjustedAllowedFormats.length > 0;\n\tlet adjustedValue = originalValue;\n\tlet adjustedOnChange = originalOnChange;\n\n\t// Handle deprecated format.\n\tif ( Array.isArray( originalValue ) ) {\n\t\tadjustedValue = childrenSource.toHTML( originalValue );\n\t\tadjustedOnChange = ( newValue ) =>\n\t\t\toriginalOnChange(\n\t\t\t\tchildrenSource.fromDOM(\n\t\t\t\t\t__unstableCreateElement( document, newValue ).childNodes\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tconst onSelectionChange = useCallback(\n\t\t( start, end ) => {\n\t\t\tselectionChange( clientId, identifier, start, end );\n\t\t},\n\t\t[ clientId, identifier ]\n\t);\n\n\tconst onDelete = useCallback(\n\t\t( { value, isReverse } ) => {\n\t\t\tif ( onMerge ) {\n\t\t\t\tonMerge( ! isReverse );\n\t\t\t}\n\n\t\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t\t// causing destruction of two fields (merge, then removed merged).\n\t\t\tif ( onRemove && isEmpty( value ) && isReverse ) {\n\t\t\t\tonRemove( ! isReverse );\n\t\t\t}\n\t\t},\n\t\t[ onMerge, onRemove ]\n\t);\n\n\t/**\n\t * Signals to the RichText owner that the block can be replaced with two\n\t * blocks as a result of splitting the block by pressing enter, or with\n\t * blocks as a result of splitting the block by pasting block content in the\n\t * instance.\n\t *\n\t * @param  {Object} record       The rich text value to split.\n\t * @param  {Array}  pastedBlocks The pasted blocks to insert, if any.\n\t */\n\tconst splitValue = useCallback(\n\t\t( record, pastedBlocks = [] ) => {\n\t\t\tif ( ! onReplace || ! onSplit ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blocks = [];\n\t\t\tconst [ before, after ] = split( record );\n\t\t\tconst hasPastedBlocks = pastedBlocks.length > 0;\n\n\t\t\t// Create a block with the content before the caret if there's no pasted\n\t\t\t// blocks, or if there are pasted blocks and the value is not empty.\n\t\t\t// We do not want a leading empty block on paste, but we do if split\n\t\t\t// with e.g. the enter key.\n\t\t\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\n\t\t\t\tblocks.push(\n\t\t\t\t\tonSplit(\n\t\t\t\t\t\ttoHTMLString( {\n\t\t\t\t\t\t\tvalue: before,\n\t\t\t\t\t\t\tmultilineTag,\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( hasPastedBlocks ) {\n\t\t\t\tblocks.push( ...pastedBlocks );\n\t\t\t} else if ( onSplitMiddle ) {\n\t\t\t\tblocks.push( onSplitMiddle() );\n\t\t\t}\n\n\t\t\t// If there's pasted blocks, append a block with the content after the\n\t\t\t// caret. Otherwise, do append and empty block if there is no\n\t\t\t// `onSplitMiddle` prop, but if there is and the content is empty, the\n\t\t\t// middle block is enough to set focus in.\n\t\t\tif ( hasPastedBlocks || ! onSplitMiddle || ! isEmpty( after ) ) {\n\t\t\t\tblocks.push(\n\t\t\t\t\tonSplit(\n\t\t\t\t\t\ttoHTMLString( {\n\t\t\t\t\t\t\tvalue: after,\n\t\t\t\t\t\t\tmultilineTag,\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If there are pasted blocks, set the selection to the last one.\n\t\t\t// Otherwise, set the selection to the second block.\n\t\t\tconst indexToSelect = hasPastedBlocks ? blocks.length - 1 : 1;\n\n\t\t\tonReplace( blocks, indexToSelect );\n\t\t},\n\t\t[ onReplace, onSplit, multilineTag, onSplitMiddle ]\n\t);\n\n\tconst onEnter = useCallback(\n\t\t( { value, onChange, shiftKey } ) => {\n\t\t\tconst canSplit = onReplace && onSplit;\n\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst transforms = getBlockTransforms( 'from' ).filter(\n\t\t\t\t\t( { type } ) => type === 'enter'\n\t\t\t\t);\n\t\t\t\tconst transformation = findTransform( transforms, ( item ) => {\n\t\t\t\t\treturn item.regExp.test( value.text );\n\t\t\t\t} );\n\n\t\t\t\tif ( transformation ) {\n\t\t\t\t\tonReplace( [\n\t\t\t\t\t\ttransformation.transform( { content: value.text } ),\n\t\t\t\t\t] );\n\t\t\t\t\t__unstableMarkAutomaticChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( multiline ) {\n\t\t\t\tif ( shiftKey ) {\n\t\t\t\t\tonChange( insert( value, '\\n' ) );\n\t\t\t\t} else if ( canSplit && isEmptyLine( value ) ) {\n\t\t\t\t\tsplitValue( value );\n\t\t\t\t} else {\n\t\t\t\t\tonChange( insertLineSeparator( value ) );\n\t\t\t\t}\n\t\t\t} else if ( shiftKey || ! canSplit ) {\n\t\t\t\tonChange( insert( value, '\\n' ) );\n\t\t\t} else {\n\t\t\t\tsplitValue( value );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\t__unstableMarkAutomaticChange,\n\t\t\tmultiline,\n\t\t\tsplitValue,\n\t\t]\n\t);\n\n\tconst onPaste = useCallback(\n\t\t( { value, onChange, html, plainText, files, activeFormats } ) => {\n\t\t\t// Only process file if no HTML is present.\n\t\t\t// Note: a pasted file may have the URL as plain text.\n\t\t\tif ( files && files.length && ! html ) {\n\t\t\t\tconst content = pasteHandler( {\n\t\t\t\t\tHTML: filePasteHandler( files ),\n\t\t\t\t\tmode: 'BLOCKS',\n\t\t\t\t\ttagName,\n\t\t\t\t} );\n\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\twindow.console.log( 'Received items:\\n\\n', files );\n\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tonReplace( content );\n\t\t\t\t} else {\n\t\t\t\t\tsplitValue( value, content );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet mode = onReplace && onSplit ? 'AUTO' : 'INLINE';\n\n\t\t\tif (\n\t\t\t\t__unstableEmbedURLOnPaste &&\n\t\t\t\tisEmpty( value ) &&\n\t\t\t\tisURL( plainText.trim() )\n\t\t\t) {\n\t\t\t\tmode = 'BLOCKS';\n\t\t\t}\n\n\t\t\tconst content = pasteHandler( {\n\t\t\t\tHTML: html,\n\t\t\t\tplainText,\n\t\t\t\tmode,\n\t\t\t\ttagName,\n\t\t\t\tcanUserUseUnfilteredHTML,\n\t\t\t} );\n\n\t\t\tif ( typeof content === 'string' ) {\n\t\t\t\tlet valueToInsert = create( { html: content } );\n\n\t\t\t\t// If there are active formats, merge them with the pasted formats.\n\t\t\t\tif ( activeFormats.length ) {\n\t\t\t\t\tlet index = valueToInsert.formats.length;\n\n\t\t\t\t\twhile ( index-- ) {\n\t\t\t\t\t\tvalueToInsert.formats[ index ] = [\n\t\t\t\t\t\t\t...activeFormats,\n\t\t\t\t\t\t\t...( valueToInsert.formats[ index ] || [] ),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If the content should be multiline, we should process text\n\t\t\t\t// separated by a line break as separate lines.\n\t\t\t\tif ( multiline ) {\n\t\t\t\t\tvalueToInsert = replace(\n\t\t\t\t\t\tvalueToInsert,\n\t\t\t\t\t\t/\\n+/g,\n\t\t\t\t\t\tLINE_SEPARATOR\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t\t} else if ( content.length > 0 ) {\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tonReplace( content );\n\t\t\t\t} else {\n\t\t\t\t\tsplitValue( value, content );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\ttagName,\n\t\t\tonReplace,\n\t\t\tonSplit,\n\t\t\tsplitValue,\n\t\t\t__unstableEmbedURLOnPaste,\n\t\t\tcanUserUseUnfilteredHTML,\n\t\t\tmultiline,\n\t\t]\n\t);\n\n\tconst inputRule = useCallback(\n\t\t( value, valueToFormat ) => {\n\t\t\tif ( ! onReplace ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { start, text } = value;\n\t\t\tconst characterBefore = text.slice( start - 1, start );\n\n\t\t\t// The character right before the caret must be a plain space.\n\t\t\tif ( characterBefore !== ' ' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst trimmedTextBefore = text.slice( 0, start ).trim();\n\t\t\tconst prefixTransforms = getBlockTransforms( 'from' ).filter(\n\t\t\t\t( { type } ) => type === 'prefix'\n\t\t\t);\n\t\t\tconst transformation = findTransform(\n\t\t\t\tprefixTransforms,\n\t\t\t\t( { prefix } ) => {\n\t\t\t\t\treturn trimmedTextBefore === prefix;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( ! transformation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst content = valueToFormat( slice( value, start, text.length ) );\n\t\t\tconst block = transformation.transform( content );\n\n\t\t\tonReplace( [ block ] );\n\t\t\t__unstableMarkAutomaticChange();\n\t\t},\n\t\t[ onReplace, __unstableMarkAutomaticChange ]\n\t);\n\n\tconst content = (\n\t\t<RichText\n\t\t\t{ ...props }\n\t\t\tclientId={ clientId }\n\t\t\tidentifier={ identifier }\n\t\t\tref={ ref }\n\t\t\tvalue={ adjustedValue }\n\t\t\tonChange={ adjustedOnChange }\n\t\t\tselectionStart={ selectionStart }\n\t\t\tselectionEnd={ selectionEnd }\n\t\t\tonSelectionChange={ onSelectionChange }\n\t\t\ttagName={ tagName }\n\t\t\tclassName={ classnames( classes, className, {\n\t\t\t\t'keep-placeholder-on-focus': keepPlaceholderOnFocus,\n\t\t\t} ) }\n\t\t\tplaceholder={ placeholder }\n\t\t\tallowedFormats={ adjustedAllowedFormats }\n\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\n\t\t\tonEnter={ onEnter }\n\t\t\tonDelete={ onDelete }\n\t\t\tonPaste={ onPaste }\n\t\t\t__unstableIsSelected={ isSelected }\n\t\t\t__unstableInputRule={ inputRule }\n\t\t\t__unstableMultilineTag={ multilineTag }\n\t\t\t__unstableIsCaretWithinFormattedText={ isCaretWithinFormattedText }\n\t\t\t__unstableOnEnterFormattedText={ enterFormattedText }\n\t\t\t__unstableOnExitFormattedText={ exitFormattedText }\n\t\t\t__unstableOnCreateUndoLevel={ __unstableMarkLastChangeAsPersistent }\n\t\t\t__unstableMarkAutomaticChange={ __unstableMarkAutomaticChange }\n\t\t\t__unstableDidAutomaticChange={ didAutomaticChange }\n\t\t\t__unstableUndo={ undo }\n\t\t\tstyle={ style }\n\t\t\tpreserveWhiteSpace={ preserveWhiteSpace }\n\t\t\tdisabled={ disabled }\n\t\t\tstart={ startAttr }\n\t\t\treversed={ reversed }\n\t\t\t// Native props.\n\t\t\tonCaretVerticalPositionChange={ onCaretVerticalPositionChange }\n\t\t\tblockIsSelected={\n\t\t\t\toriginalIsSelected !== undefined\n\t\t\t\t\t? originalIsSelected\n\t\t\t\t\t: blockIsSelected\n\t\t\t}\n\t\t\tshouldBlurOnUnmount={ shouldBlurOnUnmount }\n\t\t>\n\t\t\t{ ( {\n\t\t\t\tisSelected: nestedIsSelected,\n\t\t\t\tvalue,\n\t\t\t\tonChange,\n\t\t\t\tonFocus,\n\t\t\t\tEditable,\n\t\t\t} ) => (\n\t\t\t\t<>\n\t\t\t\t\t{ children && children( { value, onChange, onFocus } ) }\n\t\t\t\t\t{ nestedIsSelected && hasFormats && (\n\t\t\t\t\t\t<FormatToolbarContainer\n\t\t\t\t\t\t\tinline={ inlineToolbar }\n\t\t\t\t\t\t\tanchorRef={ ref.current }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ nestedIsSelected && <RemoveBrowserShortcuts /> }\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tcompleters={ autocompleters }\n\t\t\t\t\t\trecord={ value }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tisSelected={ nestedIsSelected }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( { listBoxId, activeId, onKeyDown } ) => (\n\t\t\t\t\t\t\t<Editable\n\t\t\t\t\t\t\t\taria-autocomplete={\n\t\t\t\t\t\t\t\t\tlistBoxId ? 'list' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-owns={ listBoxId }\n\t\t\t\t\t\t\t\taria-activedescendant={ activeId }\n\t\t\t\t\t\t\t\tstart={ startAttr }\n\t\t\t\t\t\t\t\treversed={ reversed }\n\t\t\t\t\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Autocomplete>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</RichText>\n\t);\n\n\tif ( ! wrapperClassName ) {\n\t\treturn content;\n\t}\n\n\tdeprecated( 'wp.blockEditor.RichText wrapperClassName prop', {\n\t\talternative: 'className prop or create your own wrapper div',\n\t} );\n\n\treturn (\n\t\t<div className={ classnames( wrapperClasses, wrapperClassName ) }>\n\t\t\t{ content }\n\t\t</div>\n\t);\n}\n\nconst ForwardedRichTextContainer = forwardRef( RichTextWrapper );\n\nForwardedRichTextContainer.Content = ( {\n\tvalue,\n\ttagName: Tag,\n\tmultiline,\n\t...props\n} ) => {\n\t// Handle deprecated `children` and `node` sources.\n\tif ( Array.isArray( value ) ) {\n\t\tvalue = childrenSource.toHTML( value );\n\t}\n\n\tconst MultilineTag = getMultilineTag( multiline );\n\n\tif ( ! value && MultilineTag ) {\n\t\tvalue = `<${ MultilineTag }></${ MultilineTag }>`;\n\t}\n\n\tconst content = <RawHTML>{ value }</RawHTML>;\n\n\tif ( Tag ) {\n\t\treturn <Tag { ...omit( props, [ 'format' ] ) }>{ content }</Tag>;\n\t}\n\n\treturn content;\n};\n\nForwardedRichTextContainer.isEmpty = ( value ) => {\n\treturn ! value || value.length === 0;\n};\n\nForwardedRichTextContainer.Content.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/rich-text/README.md\n */\nexport default ForwardedRichTextContainer;\nexport { RichTextShortcut } from './shortcut';\nexport { RichTextToolbarButton } from './toolbar-button';\nexport { __unstableRichTextInputEvent } from './input-event';\n"]}