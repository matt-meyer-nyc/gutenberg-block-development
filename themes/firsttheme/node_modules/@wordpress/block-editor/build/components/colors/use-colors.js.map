{"version":3,"sources":["@wordpress/block-editor/src/components/colors/use-colors.js"],"names":["window","getComputedStyle","Node","DEFAULT_COLORS","COMMON_COLOR_LABELS","textColor","backgroundColor","resolveContrastCheckerColor","color","colorSettings","detectedColor","ColorPanel","title","colorPanelProps","contrastCheckers","detectedBackgroundColor","panelChildren","initialOpen","Object","values","Array","isArray","map","rest","value","InspectorControlsColorPanel","props","__experimentalUseColors","colorConfigs","panelTitle","colorDetector","targetRef","backgroundColorTargetRef","textColorTargetRef","deps","clientId","select","getBlockAttributes","getSettings","colors","attributes","settingsColors","updateBlockAttributes","setAttributes","newAttributes","createComponent","name","property","className","colorValue","customColor","children","componentClassName","style","componentStyle","Children","child","colorStyle","maxSize","length","createSetColor","newColor","find","_color","undefined","slug","setDetectedBackgroundColor","setDetectedColor","needsBackgroundColor","needsColor","current","backgroundColorNode","parentNode","nodeType","ELEMENT_NODE","reduce","acc","colorConfig","components","panelLabel","label","componentName","replace","__color","displayName","setColor","onChange","wrappedColorPanelProps"],"mappings":";;;;;;;;;AAYA;;;;;;;;;;;;AATA;;AACA;;AACA;;AAKA;;AACA;;AAaA;;AACA;;AACA;;AACA;;;;;;AAEA;;;cAGmCA,M;IAA3BC,gB,WAAAA,gB;IAAkBC,I,WAAAA,I;AAE1B,IAAMC,cAAc,GAAG,EAAvB;AAEA,IAAMC,mBAAmB,GAAG;AAC3BC,EAAAA,SAAS,EAAE,cAAI,YAAJ,CADgB;AAE3BC,EAAAA,eAAe,EAAE,cAAI,kBAAJ;AAFU,CAA5B;;AAKA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAEC,KAAF,EAASC,aAAT,EAAwBC,aAAxB,EAA2C;AAC9E,MAAK,OAAOF,KAAP,KAAiB,UAAtB,EAAmC;AAClC,WAAOA,KAAK,CAAEC,aAAF,CAAZ;AACA,GAFD,MAEO,IAAKD,KAAK,KAAK,IAAf,EAAsB;AAC5B,WAAOE,aAAP;AACA;;AACD,SAAOF,KAAP;AACA,CAPD;;AASA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MAClBC,KADkB,QAClBA,KADkB;AAAA,MAElBH,aAFkB,QAElBA,aAFkB;AAAA,MAGlBI,eAHkB,QAGlBA,eAHkB;AAAA,MAIlBC,gBAJkB,QAIlBA,gBAJkB;AAAA,MAKlBC,uBALkB,QAKlBA,uBALkB;AAAA,MAMlBL,aANkB,QAMlBA,aANkB;AAAA,MAOlBM,aAPkB,QAOlBA,aAPkB;AAAA,MAQlBC,WARkB,QAQlBA,WARkB;AAAA,SAUlB,4BAAC,2BAAD;AACC,IAAA,KAAK,EAAGL,KADT;AAEC,IAAA,WAAW,EAAGK,WAFf;AAGC,IAAA,aAAa,EAAGC,MAAM,CAACC,MAAP,CAAeV,aAAf;AAHjB,KAIMI,eAJN,GAMGC,gBAAgB,KACfM,KAAK,CAACC,OAAN,CAAeP,gBAAf,IACCA,gBAAgB,CAACQ,GAAjB,CACA,iBAA+C;AAAA,QAA3ChB,eAA2C,SAA3CA,eAA2C;AAAA,QAA1BD,SAA0B,SAA1BA,SAA0B;AAAA,QAAZkB,IAAY;AAC9CjB,IAAAA,eAAe,GAAGC,2BAA2B,CAC5CD,eAD4C,EAE5CG,aAF4C,EAG5CM,uBAH4C,CAA7C;AAKAV,IAAAA,SAAS,GAAGE,2BAA2B,CACtCF,SADsC,EAEtCI,aAFsC,EAGtCC,aAHsC,CAAvC;AAKA,WACC,4BAAC,wBAAD;AACC,MAAA,GAAG,YAAOJ,eAAP,cAA4BD,SAA5B,CADJ;AAEC,MAAA,eAAe,EAAGC,eAFnB;AAGC,MAAA,SAAS,EAAGD;AAHb,OAIMkB,IAJN,EADD;AAQA,GApBD,CADD,GAuBC,iBAAKd,aAAL,EAAoB,iBAAiB;AAAA,QAAbe,KAAa,SAAbA,KAAa;AAAA,QAC/BlB,eAD+B,GACAQ,gBADA,CAC/BR,eAD+B;AAAA,QACdD,SADc,GACAS,gBADA,CACdT,SADc;AAErCC,IAAAA,eAAe,GAAGC,2BAA2B,CAC5CD,eAAe,IAAIkB,KADyB,EAE5Cf,aAF4C,EAG5CM,uBAH4C,CAA7C;AAKAV,IAAAA,SAAS,GAAGE,2BAA2B,CACtCF,SAAS,IAAImB,KADyB,EAEtCf,aAFsC,EAGtCC,aAHsC,CAAvC;AAKA,WACC,4BAAC,wBAAD,6BACMI,gBADN;AAEC,MAAA,GAAG,YAAOR,eAAP,cAA4BD,SAA5B,CAFJ;AAGC,MAAA,eAAe,EAAGC,eAHnB;AAIC,MAAA,SAAS,EAAGD;AAJb,OADD;AAQC,GApBD,CAxBc,CANnB,EAmDG,OAAOW,aAAP,KAAyB,UAAzB,GACCA,aAAa,CAAEP,aAAF,CADd,GAECO,aArDJ,CAVkB;AAAA,CAAnB;;AAkEA,IAAMS,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAEC,KAAF;AAAA,SACnC,4BAAC,0BAAD,QACC,4BAAC,UAAD,EAAiBA,KAAjB,CADD,CADmC;AAAA,CAApC;;AAMe,SAASC,uBAAT,CACdC,YADc,EAgBb;AAAA,kFAJG;AACHC,IAAAA,UAAU,EAAE,cAAI,gBAAJ;AADT,GAIH;AAAA,+BAbAA,UAaA;AAAA,MAbAA,UAaA,iCAba,cAAI,gBAAJ,CAab;AAAA,MAZAhB,eAYA,SAZAA,eAYA;AAAA,MAXAC,gBAWA,SAXAA,gBAWA;AAAA,MAVAE,aAUA,SAVAA,aAUA;AAAA,kCATAc,aASA;;AAAA,yDALI,EAKJ;AAAA,MARCC,SAQD,uBARCA,SAQD;AAAA,kDAPCC,wBAOD;AAAA,MAPCA,wBAOD,sCAP4BD,SAO5B;AAAA,kDANCE,kBAMD;AAAA,MANCA,kBAMD,sCANsBF,SAMtB;AAAA,MADDG,IACC,uEADM,EACN;;AAAA,6BACoB,qCADpB;AAAA,MACOC,QADP,wBACOA,QADP;;AAAA,mBAEsC,qBACtC,UAAEC,MAAF,EAAc;AAAA,kBAC+BA,MAAM,CACjD,mBADiD,CADrC;AAAA,QACLC,kBADK,WACLA,kBADK;AAAA,QACeC,WADf,WACeA,WADf;;AAIb,QAAMC,MAAM,GAAGD,WAAW,GAAGC,MAA7B;AACA,WAAO;AACNC,MAAAA,UAAU,EAAEH,kBAAkB,CAAEF,QAAF,CADxB;AAENM,MAAAA,cAAc,EACb,CAAEF,MAAF,IAAYA,MAAM,KAAK,IAAvB,GAA8BpC,cAA9B,GAA+CoC;AAH1C,KAAP;AAKA,GAXqC,EAYtC,CAAEJ,QAAF,CAZsC,CAFtC;AAAA,MAEOK,UAFP,cAEOA,UAFP;AAAA,MAEmBC,cAFnB,cAEmBA,cAFnB;;AAAA,qBAgBiC,uBAAa,mBAAb,CAhBjC;AAAA,MAgBOC,qBAhBP,gBAgBOA,qBAhBP;;AAiBD,MAAMC,aAAa,GAAG,0BACrB,UAAEC,aAAF;AAAA,WAAqBF,qBAAqB,CAAEP,QAAF,EAAYS,aAAZ,CAA1C;AAAA,GADqB,EAErB,CAAEF,qBAAF,EAAyBP,QAAzB,CAFqB,CAAtB;AAKA,MAAMU,eAAe,GAAG,sBACvB;AAAA,WACC,qBACC,UACCC,IADD,EAECC,QAFD,EAGCC,SAHD,EAICxC,KAJD,EAKCyC,UALD,EAMCC,WAND;AAAA,aAOK;AAAA,YACJC,QADI,SACJA,QADI;AAAA,oCAEJH,SAFI;AAAA,YAEOI,kBAFP,gCAE4B,EAF5B;AAAA,gCAGJC,KAHI;AAAA,YAGGC,cAHH,4BAGoB,EAHpB;AAAA,eAKJ;AACA;AACAC,4BAASjC,GAAT,CAAc6B,QAAd,EAAwB,UAAEK,KAAF,EAAa;AAAA;;AACpC,gBAAIC,UAAU,GAAG,EAAjB;;AACA,gBAAKjD,KAAL,EAAa;AACZiD,cAAAA,UAAU,qCAAOV,QAAP,EAAmBE,UAAnB,CAAV;AACA,aAFD,MAEO,IAAKC,WAAL,EAAmB;AACzBO,cAAAA,UAAU,qCAAOV,QAAP,EAAmBG,WAAnB,CAAV;AACA;;AAED,mBAAO,2BAAcM,KAAd,EAAqB;AAC3BR,cAAAA,SAAS,EAAE,0BACVI,kBADU,EAEVI,KAAK,CAAC9B,KAAN,CAAYsB,SAFF,8EAIC,uBAAWxC,KAAX,CAJD,cAIyB,uBACjCuC,QADiC,CAJzB,GAMDvC,KANC,8CAOPwC,SAAS,kBACH,uBAAWF,IAAX,CADG,CAPF,EASRtC,KAAK,IAAI0C,WATD,gBADgB;AAa3BG,cAAAA,KAAK,oBACDI,UADC,MAEDH,cAFC,MAGCE,KAAK,CAAC9B,KAAN,CAAY2B,KAAZ,IAAqB,EAHtB;AAbsB,aAArB,CAAP;AAmBA,WA3BD;AAPI;AAAA,OAPL;AAAA,KADD,EA2CC;AAAEK,MAAAA,OAAO,EAAE9B,YAAY,CAAC+B;AAAxB,KA3CD,CADD;AAAA,GADuB,EA+CvB,CAAE/B,YAAY,CAAC+B,MAAf,CA/CuB,CAAxB;AAiDA,MAAMC,cAAc,GAAG,sBACtB;AAAA,WACC,qBACC,UAAEd,IAAF,EAAQP,MAAR;AAAA,aAAoB,UAAEsB,QAAF,EAAgB;AACnC,YAAMrD,KAAK,GAAG+B,MAAM,CAACuB,IAAP,CACb,UAAEC,MAAF;AAAA,iBAAcA,MAAM,CAACvD,KAAP,KAAiBqD,QAA/B;AAAA,SADa,CAAd;AAGAlB,QAAAA,aAAa,mCACVnC,KAAK,GACJ,wCAAsBsC,IAAtB,EADI,GAEJA,IAHS,EAGDkB,SAHC,EAAb;AAKArB,QAAAA,aAAa,mCACVnC,KAAK,GACJsC,IADI,GAEJ,wCAAsBA,IAAtB,EAHS,EAG0BtC,KAAK,GACxCA,KAAK,CAACyD,IADkC,GAExCJ,QALS,EAAb;AAOA,OAhBD;AAAA,KADD,EAkBC;AACCH,MAAAA,OAAO,EAAE9B,YAAY,CAAC+B;AADvB,KAlBD,CADD;AAAA,GADsB,EAwBtB,CAAEhB,aAAF,EAAiBf,YAAY,CAAC+B,MAA9B,CAxBsB,CAAvB;;AAvEC,kBAkG+D,wBAlG/D;AAAA;AAAA,MAkGO5C,uBAlGP;AAAA,MAkGgCmD,0BAlGhC;;AAAA,mBAmG2C,wBAnG3C;AAAA;AAAA,MAmGOxD,aAnGP;AAAA,MAmGsByD,gBAnGtB;;AAqGD,0BAAW,YAAM;AAChB,QAAK,CAAErD,gBAAP,EAA0B;AACzB,aAAOkD,SAAP;AACA;;AACD,QAAII,oBAAoB,GAAG,KAA3B;AACA,QAAIC,UAAU,GAAG,KAAjB;AALgB;AAAA;AAAA;;AAAA;AAMhB,2BAA8C,uBAC7CvD,gBAD6C,CAA9C,8HAEI;AAAA;AAAA,YAFUR,gBAEV,eAFUA,eAEV;AAAA,YAF2BD,SAE3B,eAF2BA,SAE3B;;AACH,YAAK,CAAE+D,oBAAP,EAA8B;AAC7BA,UAAAA,oBAAoB,GAAG9D,gBAAe,KAAK,IAA3C;AACA;;AACD,YAAK,CAAE+D,UAAP,EAAoB;AACnBA,UAAAA,UAAU,GAAGhE,SAAS,KAAK,IAA3B;AACA;;AACD,YAAK+D,oBAAoB,IAAIC,UAA7B,EAA0C;AACzC;AACA;AACD;AAlBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBhB,QAAKA,UAAL,EAAkB;AACjBF,MAAAA,gBAAgB,CACflE,gBAAgB,CAAEgC,kBAAkB,CAACqC,OAArB,CAAhB,CAA+C9D,KADhC,CAAhB;AAGA;;AAED,QAAK4D,oBAAL,EAA4B;AAC3B,UAAIG,mBAAmB,GAAGvC,wBAAwB,CAACsC,OAAnD;AACA,UAAIhE,eAAe,GAAGL,gBAAgB,CAAEsE,mBAAF,CAAhB,CACpBjE,eADF;;AAEA,aACCA,eAAe,KAAK,kBAApB,IACAiE,mBAAmB,CAACC,UADpB,IAEAD,mBAAmB,CAACC,UAApB,CAA+BC,QAA/B,KAA4CvE,IAAI,CAACwE,YAHlD,EAIE;AACDH,QAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,UAA1C;AACAlE,QAAAA,eAAe,GAAGL,gBAAgB,CAAEsE,mBAAF,CAAhB,CAChBjE,eADF;AAEA;;AAED4D,MAAAA,0BAA0B,CAAE5D,eAAF,CAA1B;AACA;AACD,GA1CD,GA2CCsB,YAAY,CAAC+C,MAAb,CACC,UAAEC,GAAF,EAAOC,WAAP;AAAA,qBACKD,GADL,gBACgBpC,UAAU,CAAEqC,WAAW,CAAC/B,IAAd,CAD1B,gBAEEN,UAAU,CAAE,wCAAsBqC,WAAW,CAAC/B,IAAlC,EAAF,CAFZ;AAAA,GADD,EAKC,EALD,CA3CD,0CAkDIZ,IAlDJ;AAqDA,SAAO,sBAAS,YAAM;AACrB,QAAMzB,aAAa,GAAG,EAAtB;AAEA,QAAMqE,UAAU,GAAGlD,YAAY,CAAC+C,MAAb,CAAqB,UAAEC,GAAF,EAAOC,WAAP,EAAwB;AAC/D,UAAK,OAAOA,WAAP,KAAuB,QAA5B,EAAuC;AACtCA,QAAAA,WAAW,GAAG;AAAE/B,UAAAA,IAAI,EAAE+B;AAAR,SAAd;AACA;;AAH8D,iDAiB3DA,WAjB2D;AAkB9DrE,QAAAA,KAAK,EAAEgC,UAAU,CAAEqC,WAAW,CAAC/B,IAAd;AAlB6C;AAAA,UAK9DA,IAL8D,sBAK9DA,IAL8D;AAAA,qDAM9DC,QAN8D;AAAA,UAM9DA,QAN8D,sCAMnDD,IANmD;AAAA,UAO9DE,SAP8D,sBAO9DA,SAP8D;AAAA,qDAS9D+B,UAT8D;AAAA,UAS9DA,UAT8D,sCASjDF,WAAW,CAACG,KAAZ,IACZ5E,mBAAmB,CAAE0C,IAAF,CADP,IAEZ,uBAAWA,IAAX,CAX6D;AAAA,qDAY9DmC,aAZ8D;AAAA,UAY9DA,aAZ8D,sCAY9C,uBAAWnC,IAAX,EAAkBoC,OAAlB,CAA2B,KAA3B,EAAkC,EAAlC,CAZ8C;AAAA,sDAc9D1E,KAd8D;AAAA,UAc9DA,KAd8D,uCActDqE,WAAW,CAACrE,KAd0C;AAAA,sDAe9D+B,MAf8D;AAAA,UAe9DA,MAf8D,uCAerDE,cAfqD;;AAqB/D,UAAMS,WAAW,GAAGV,UAAU,CAAE,wCAAsBM,IAAtB,EAAF,CAA9B,CArB+D,CAsB/D;AACA;;AACA,UAAMiB,MAAM,GAAGb,WAAW,GACvBc,SADuB,GAEvBzB,MAAM,CAACuB,IAAP,CAAa,UAAEqB,OAAF;AAAA,eAAeA,OAAO,CAAClB,IAAR,KAAiBzD,KAAhC;AAAA,OAAb,CAFH;;AAGAoE,MAAAA,GAAG,CAAEK,aAAF,CAAH,GAAuBpC,eAAe,CACrCC,IADqC,EAErCC,QAFqC,EAGrCC,SAHqC,EAIrCxC,KAJqC,EAKrCuD,MAAM,IAAIA,MAAM,CAACvD,KALoB,EAMrC0C,WANqC,CAAtC;AAQA0B,MAAAA,GAAG,CAAEK,aAAF,CAAH,CAAqBG,WAArB,GAAmCH,aAAnC;AACAL,MAAAA,GAAG,CAAEK,aAAF,CAAH,CAAqBzE,KAArB,GAA6B0C,WAAW,GACrCA,WADqC,GAErCa,MAAM,IAAIA,MAAM,CAACvD,KAFpB;AAGAoE,MAAAA,GAAG,CAAEK,aAAF,CAAH,CAAqBhB,IAArB,GAA4BzD,KAA5B;AACAoE,MAAAA,GAAG,CAAEK,aAAF,CAAH,CAAqBI,QAArB,GAAgCzB,cAAc,CAAEd,IAAF,EAAQP,MAAR,CAA9C;AAEA9B,MAAAA,aAAa,CAAEwE,aAAF,CAAb,GAAiC;AAChCzD,QAAAA,KAAK,EAAEuC,MAAM,GACVA,MAAM,CAACvD,KADG,GAEVgC,UAAU,CAAE,wCAAsBM,IAAtB,EAAF,CAHmB;AAIhCwC,QAAAA,QAAQ,EAAEV,GAAG,CAAEK,aAAF,CAAH,CAAqBI,QAJC;AAKhCL,QAAAA,KAAK,EAAED,UALyB;AAMhCxC,QAAAA,MAAM,EAANA;AANgC,OAAjC,CA1C+D,CAkD/D;AACA;AACA;AACA;;AACA,UAAK,CAAEA,MAAP,EAAgB;AACf,eAAO9B,aAAa,CAAEwE,aAAF,CAAb,CAA+B1C,MAAtC;AACA;;AAED,aAAOqC,GAAP;AACA,KA3DkB,EA2DhB,EA3DgB,CAAnB;AA6DA,QAAMW,sBAAsB,GAAG;AAC9B3E,MAAAA,KAAK,EAAEiB,UADuB;AAE9BZ,MAAAA,WAAW,EAAE,KAFiB;AAG9BR,MAAAA,aAAa,EAAbA,aAH8B;AAI9BI,MAAAA,eAAe,EAAfA,eAJ8B;AAK9BC,MAAAA,gBAAgB,EAAhBA,gBAL8B;AAM9BC,MAAAA,uBAAuB,EAAvBA,uBAN8B;AAO9BL,MAAAA,aAAa,EAAbA,aAP8B;AAQ9BM,MAAAA,aAAa,EAAbA;AAR8B,KAA/B;AAUA,6BACI8D,UADJ;AAECnE,MAAAA,UAAU,EAAE,4BAAC,UAAD,EAAiB4E,sBAAjB,CAFb;AAGC9D,MAAAA,2BAA2B,EAC1B,4BAAC,2BAAD,EAAkC8D,sBAAlC;AAJF;AAOA,GAjFM,GAkFN/C,UAlFM,EAmFNG,aAnFM,EAoFNjC,aApFM,EAqFNK,uBArFM,0CAsFHmB,IAtFG,GAAP;AAwFA","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport classnames from 'classnames';\nimport { map, kebabCase, camelCase, castArray, startCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tChildren,\n\tcloneElement,\n\tuseState,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport PanelColorSettings from '../panel-color-settings';\nimport ContrastChecker from '../contrast-checker';\nimport InspectorControls from '../inspector-controls';\nimport { useBlockEditContext } from '../block-edit';\n\n/**\n * Browser dependencies\n */\nconst { getComputedStyle, Node } = window;\n\nconst DEFAULT_COLORS = [];\n\nconst COMMON_COLOR_LABELS = {\n\ttextColor: __( 'Text Color' ),\n\tbackgroundColor: __( 'Background Color' ),\n};\n\nconst resolveContrastCheckerColor = ( color, colorSettings, detectedColor ) => {\n\tif ( typeof color === 'function' ) {\n\t\treturn color( colorSettings );\n\t} else if ( color === true ) {\n\t\treturn detectedColor;\n\t}\n\treturn color;\n};\n\nconst ColorPanel = ( {\n\ttitle,\n\tcolorSettings,\n\tcolorPanelProps,\n\tcontrastCheckers,\n\tdetectedBackgroundColor,\n\tdetectedColor,\n\tpanelChildren,\n\tinitialOpen,\n} ) => (\n\t<PanelColorSettings\n\t\ttitle={ title }\n\t\tinitialOpen={ initialOpen }\n\t\tcolorSettings={ Object.values( colorSettings ) }\n\t\t{ ...colorPanelProps }\n\t>\n\t\t{ contrastCheckers &&\n\t\t\t( Array.isArray( contrastCheckers )\n\t\t\t\t? contrastCheckers.map(\n\t\t\t\t\t\t( { backgroundColor, textColor, ...rest } ) => {\n\t\t\t\t\t\t\tbackgroundColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\tdetectedBackgroundColor\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\t\ttextColor,\n\t\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\t\tdetectedColor\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t\tkey={ `${ backgroundColor }-${ textColor }` }\n\t\t\t\t\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\t\t\t\t\ttextColor={ textColor }\n\t\t\t\t\t\t\t\t\t{ ...rest }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t  )\n\t\t\t\t: map( colorSettings, ( { value } ) => {\n\t\t\t\t\t\tlet { backgroundColor, textColor } = contrastCheckers;\n\t\t\t\t\t\tbackgroundColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\tbackgroundColor || value,\n\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\tdetectedBackgroundColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttextColor = resolveContrastCheckerColor(\n\t\t\t\t\t\t\ttextColor || value,\n\t\t\t\t\t\t\tcolorSettings,\n\t\t\t\t\t\t\tdetectedColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t{ ...contrastCheckers }\n\t\t\t\t\t\t\t\tkey={ `${ backgroundColor }-${ textColor }` }\n\t\t\t\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\t\t\t\ttextColor={ textColor }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t  } ) ) }\n\t\t{ typeof panelChildren === 'function'\n\t\t\t? panelChildren( colorSettings )\n\t\t\t: panelChildren }\n\t</PanelColorSettings>\n);\nconst InspectorControlsColorPanel = ( props ) => (\n\t<InspectorControls>\n\t\t<ColorPanel { ...props } />\n\t</InspectorControls>\n);\n\nexport default function __experimentalUseColors(\n\tcolorConfigs,\n\t{\n\t\tpanelTitle = __( 'Color settings' ),\n\t\tcolorPanelProps,\n\t\tcontrastCheckers,\n\t\tpanelChildren,\n\t\tcolorDetector: {\n\t\t\ttargetRef,\n\t\t\tbackgroundColorTargetRef = targetRef,\n\t\t\ttextColorTargetRef = targetRef,\n\t\t} = {},\n\t} = {\n\t\tpanelTitle: __( 'Color settings' ),\n\t},\n\tdeps = []\n) {\n\tconst { clientId } = useBlockEditContext();\n\tconst { attributes, settingsColors } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes, getSettings } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\tconst colors = getSettings().colors;\n\t\t\treturn {\n\t\t\t\tattributes: getBlockAttributes( clientId ),\n\t\t\t\tsettingsColors:\n\t\t\t\t\t! colors || colors === true ? DEFAULT_COLORS : colors,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { updateBlockAttributes } = useDispatch( 'core/block-editor' );\n\tconst setAttributes = useCallback(\n\t\t( newAttributes ) => updateBlockAttributes( clientId, newAttributes ),\n\t\t[ updateBlockAttributes, clientId ]\n\t);\n\n\tconst createComponent = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t(\n\t\t\t\t\tname,\n\t\t\t\t\tproperty,\n\t\t\t\t\tclassName,\n\t\t\t\t\tcolor,\n\t\t\t\t\tcolorValue,\n\t\t\t\t\tcustomColor\n\t\t\t\t) => ( {\n\t\t\t\t\tchildren,\n\t\t\t\t\tclassName: componentClassName = '',\n\t\t\t\t\tstyle: componentStyle = {},\n\t\t\t\t} ) =>\n\t\t\t\t\t// Clone children, setting the style property from the color configuration,\n\t\t\t\t\t// if not already set explicitly through props.\n\t\t\t\t\tChildren.map( children, ( child ) => {\n\t\t\t\t\t\tlet colorStyle = {};\n\t\t\t\t\t\tif ( color ) {\n\t\t\t\t\t\t\tcolorStyle = { [ property ]: colorValue };\n\t\t\t\t\t\t} else if ( customColor ) {\n\t\t\t\t\t\t\tcolorStyle = { [ property ]: customColor };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn cloneElement( child, {\n\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\tcomponentClassName,\n\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[ `has-${ kebabCase( color ) }-${ kebabCase(\n\t\t\t\t\t\t\t\t\t\tproperty\n\t\t\t\t\t\t\t\t\t) }` ]: color,\n\t\t\t\t\t\t\t\t\t[ className ||\n\t\t\t\t\t\t\t\t\t`has-${ kebabCase( name ) }` ]:\n\t\t\t\t\t\t\t\t\t\tcolor || customColor,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t...colorStyle,\n\t\t\t\t\t\t\t\t...componentStyle,\n\t\t\t\t\t\t\t\t...( child.props.style || {} ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t{ maxSize: colorConfigs.length }\n\t\t\t),\n\t\t[ colorConfigs.length ]\n\t);\n\tconst createSetColor = useMemo(\n\t\t() =>\n\t\t\tmemoize(\n\t\t\t\t( name, colors ) => ( newColor ) => {\n\t\t\t\t\tconst color = colors.find(\n\t\t\t\t\t\t( _color ) => _color.color === newColor\n\t\t\t\t\t);\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? camelCase( `custom ${ name }` )\n\t\t\t\t\t\t\t: name ]: undefined,\n\t\t\t\t\t} );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t[ color\n\t\t\t\t\t\t\t? name\n\t\t\t\t\t\t\t: camelCase( `custom ${ name }` ) ]: color\n\t\t\t\t\t\t\t? color.slug\n\t\t\t\t\t\t\t: newColor,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmaxSize: colorConfigs.length,\n\t\t\t\t}\n\t\t\t),\n\t\t[ setAttributes, colorConfigs.length ]\n\t);\n\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\n\tconst [ detectedColor, setDetectedColor ] = useState();\n\n\tuseEffect( () => {\n\t\tif ( ! contrastCheckers ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet needsBackgroundColor = false;\n\t\tlet needsColor = false;\n\t\tfor ( const { backgroundColor, textColor } of castArray(\n\t\t\tcontrastCheckers\n\t\t) ) {\n\t\t\tif ( ! needsBackgroundColor ) {\n\t\t\t\tneedsBackgroundColor = backgroundColor === true;\n\t\t\t}\n\t\t\tif ( ! needsColor ) {\n\t\t\t\tneedsColor = textColor === true;\n\t\t\t}\n\t\t\tif ( needsBackgroundColor && needsColor ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( needsColor ) {\n\t\t\tsetDetectedColor(\n\t\t\t\tgetComputedStyle( textColorTargetRef.current ).color\n\t\t\t);\n\t\t}\n\n\t\tif ( needsBackgroundColor ) {\n\t\t\tlet backgroundColorNode = backgroundColorTargetRef.current;\n\t\t\tlet backgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t.backgroundColor;\n\t\t\twhile (\n\t\t\t\tbackgroundColor === 'rgba(0, 0, 0, 0)' &&\n\t\t\t\tbackgroundColorNode.parentNode &&\n\t\t\t\tbackgroundColorNode.parentNode.nodeType === Node.ELEMENT_NODE\n\t\t\t) {\n\t\t\t\tbackgroundColorNode = backgroundColorNode.parentNode;\n\t\t\t\tbackgroundColor = getComputedStyle( backgroundColorNode )\n\t\t\t\t\t.backgroundColor;\n\t\t\t}\n\n\t\t\tsetDetectedBackgroundColor( backgroundColor );\n\t\t}\n\t}, [\n\t\tcolorConfigs.reduce(\n\t\t\t( acc, colorConfig ) =>\n\t\t\t\t`${ acc } | ${ attributes[ colorConfig.name ] } | ${\n\t\t\t\t\tattributes[ camelCase( `custom ${ colorConfig.name }` ) ]\n\t\t\t\t}`,\n\t\t\t''\n\t\t),\n\t\t...deps,\n\t] );\n\n\treturn useMemo( () => {\n\t\tconst colorSettings = {};\n\n\t\tconst components = colorConfigs.reduce( ( acc, colorConfig ) => {\n\t\t\tif ( typeof colorConfig === 'string' ) {\n\t\t\t\tcolorConfig = { name: colorConfig };\n\t\t\t}\n\t\t\tconst {\n\t\t\t\tname, // E.g. 'backgroundColor'.\n\t\t\t\tproperty = name, // E.g. 'backgroundColor'.\n\t\t\t\tclassName,\n\n\t\t\t\tpanelLabel = colorConfig.label ||\n\t\t\t\t\tCOMMON_COLOR_LABELS[ name ] ||\n\t\t\t\t\tstartCase( name ), // E.g. 'Background color'.\n\t\t\t\tcomponentName = startCase( name ).replace( /\\s/g, '' ), // E.g. 'BackgroundColor'.\n\n\t\t\t\tcolor = colorConfig.color,\n\t\t\t\tcolors = settingsColors,\n\t\t\t} = {\n\t\t\t\t...colorConfig,\n\t\t\t\tcolor: attributes[ colorConfig.name ],\n\t\t\t};\n\n\t\t\tconst customColor = attributes[ camelCase( `custom ${ name }` ) ];\n\t\t\t// We memoize the non-primitives to avoid unnecessary updates\n\t\t\t// when they are used as props for other components.\n\t\t\tconst _color = customColor\n\t\t\t\t? undefined\n\t\t\t\t: colors.find( ( __color ) => __color.slug === color );\n\t\t\tacc[ componentName ] = createComponent(\n\t\t\t\tname,\n\t\t\t\tproperty,\n\t\t\t\tclassName,\n\t\t\t\tcolor,\n\t\t\t\t_color && _color.color,\n\t\t\t\tcustomColor\n\t\t\t);\n\t\t\tacc[ componentName ].displayName = componentName;\n\t\t\tacc[ componentName ].color = customColor\n\t\t\t\t? customColor\n\t\t\t\t: _color && _color.color;\n\t\t\tacc[ componentName ].slug = color;\n\t\t\tacc[ componentName ].setColor = createSetColor( name, colors );\n\n\t\t\tcolorSettings[ componentName ] = {\n\t\t\t\tvalue: _color\n\t\t\t\t\t? _color.color\n\t\t\t\t\t: attributes[ camelCase( `custom ${ name }` ) ],\n\t\t\t\tonChange: acc[ componentName ].setColor,\n\t\t\t\tlabel: panelLabel,\n\t\t\t\tcolors,\n\t\t\t};\n\t\t\t// These settings will be spread over the `colors` in\n\t\t\t// `colorPanelProps`, so we need to unset the key here,\n\t\t\t// if not set to an actual value, to avoid overwriting\n\t\t\t// an actual value in `colorPanelProps`.\n\t\t\tif ( ! colors ) {\n\t\t\t\tdelete colorSettings[ componentName ].colors;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\tconst wrappedColorPanelProps = {\n\t\t\ttitle: panelTitle,\n\t\t\tinitialOpen: false,\n\t\t\tcolorSettings,\n\t\t\tcolorPanelProps,\n\t\t\tcontrastCheckers,\n\t\t\tdetectedBackgroundColor,\n\t\t\tdetectedColor,\n\t\t\tpanelChildren,\n\t\t};\n\t\treturn {\n\t\t\t...components,\n\t\t\tColorPanel: <ColorPanel { ...wrappedColorPanelProps } />,\n\t\t\tInspectorControlsColorPanel: (\n\t\t\t\t<InspectorControlsColorPanel { ...wrappedColorPanelProps } />\n\t\t\t),\n\t\t};\n\t}, [\n\t\tattributes,\n\t\tsetAttributes,\n\t\tdetectedColor,\n\t\tdetectedBackgroundColor,\n\t\t...deps,\n\t] );\n}\n"]}