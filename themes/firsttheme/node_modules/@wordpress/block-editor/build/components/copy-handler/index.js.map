{"version":3,"sources":["@wordpress/block-editor/src/components/copy-handler/index.js"],"names":["CopyHandler","children","handler","dispatch","ownProps","select","getBlocksByClientId","getSelectedBlockClientIds","hasMultiSelection","getSettings","removeBlocks","replaceBlocks","canUserUseUnfilteredHTML","__experimentalCanUserUseUnfilteredHTML","event","selectedBlockClientIds","length","preventDefault","type","blocks","serialized","clipboardData","setData","plainText","html","HTML","mode"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;AAXA;;;;AAQA;;;AAKA,SAASA,WAAT,OAA8C;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,OAAY,QAAZA,OAAY;AAC7C,SACC;AAAK,IAAA,MAAM,EAAGA,OAAd;AAAwB,IAAA,KAAK,EAAGA,OAAhC;AAA0C,IAAA,OAAO,EAAGA;AAApD,KACGD,QADH,CADD;AAKA;;eAEc,sBAAS,CACvB,wBAAc,UAAEE,QAAF,EAAYC,QAAZ,SAAsC;AAAA,MAAdC,MAAc,SAAdA,MAAc;;AAAA,gBAM/CA,MAAM,CAAE,mBAAF,CANyC;AAAA,MAElDC,mBAFkD,WAElDA,mBAFkD;AAAA,MAGlDC,yBAHkD,WAGlDA,yBAHkD;AAAA,MAIlDC,iBAJkD,WAIlDA,iBAJkD;AAAA,MAKlDC,WALkD,WAKlDA,WALkD;;AAAA,kBAOXN,QAAQ,CAAE,mBAAF,CAPG;AAAA,MAO3CO,YAP2C,aAO3CA,YAP2C;AAAA,MAO7BC,aAP6B,aAO7BA,aAP6B;;AAAA,qBAU/CF,WAAW,EAVoC;AAAA,MASVG,wBATU,gBASlDC,sCATkD;;AAYnD,SAAO;AACNX,IAAAA,OADM,mBACGY,KADH,EACW;AAChB,UAAMC,sBAAsB,GAAGR,yBAAyB,EAAxD;;AAEA,UAAKQ,sBAAsB,CAACC,MAAvB,KAAkC,CAAvC,EAA2C;AAC1C;AACA,OALe,CAOhB;AACA;;;AACA,UAAK,CAAER,iBAAiB,EAAnB,IAAyB,gCAA9B,EAAuD;AACtD;AACA;;AAEDM,MAAAA,KAAK,CAACG,cAAN;;AAEA,UAAKH,KAAK,CAACI,IAAN,KAAe,MAAf,IAAyBJ,KAAK,CAACI,IAAN,KAAe,KAA7C,EAAqD;AACpD,YAAMC,MAAM,GAAGb,mBAAmB,CACjCS,sBADiC,CAAlC;AAGA,YAAMK,UAAU,GAAG,wBAAWD,MAAX,CAAnB;AAEAL,QAAAA,KAAK,CAACO,aAAN,CAAoBC,OAApB,CAA6B,YAA7B,EAA2CF,UAA3C;AACAN,QAAAA,KAAK,CAACO,aAAN,CAAoBC,OAApB,CAA6B,WAA7B,EAA0CF,UAA1C;AACA;;AAED,UAAKN,KAAK,CAACI,IAAN,KAAe,KAApB,EAA4B;AAC3BR,QAAAA,YAAY,CAAEK,sBAAF,CAAZ;AACA,OAFD,MAEO,IAAKD,KAAK,CAACI,IAAN,KAAe,OAApB,EAA8B;AAAA,iCACR,2CAAmBJ,KAAnB,CADQ;AAAA,YAC5BS,SAD4B,sBAC5BA,SAD4B;AAAA,YACjBC,IADiB,sBACjBA,IADiB;;AAEpC,YAAML,OAAM,GAAG,2BAAc;AAC5BM,UAAAA,IAAI,EAAED,IADsB;AAE5BD,UAAAA,SAAS,EAATA,SAF4B;AAG5BG,UAAAA,IAAI,EAAE,QAHsB;AAI5Bd,UAAAA,wBAAwB,EAAxBA;AAJ4B,SAAd,CAAf;;AAOAD,QAAAA,aAAa,CAAEI,sBAAF,EAA0BI,OAA1B,CAAb;AACA;AACD;AAvCK,GAAP;AAyCA,CArDD,CADuB,CAAT,EAuDVnB,WAvDU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { serialize, pasteHandler } from '@wordpress/blocks';\nimport { documentHasSelection } from '@wordpress/dom';\nimport { withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getPasteEventData } from '../../utils/get-paste-event-data';\n\nfunction CopyHandler( { children, handler } ) {\n\treturn (\n\t\t<div onCopy={ handler } onCut={ handler } onPaste={ handler }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\tconst {\n\t\t\tgetBlocksByClientId,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { removeBlocks, replaceBlocks } = dispatch( 'core/block-editor' );\n\t\tconst {\n\t\t\t__experimentalCanUserUseUnfilteredHTML: canUserUseUnfilteredHTML,\n\t\t} = getSettings();\n\n\t\treturn {\n\t\t\thandler( event ) {\n\t\t\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\n\t\t\t\tif ( selectedBlockClientIds.length === 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Always handle multiple selected blocks.\n\t\t\t\t// Let native copy behaviour take over in input fields.\n\t\t\t\tif ( ! hasMultiSelection() && documentHasSelection() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif ( event.type === 'copy' || event.type === 'cut' ) {\n\t\t\t\t\tconst blocks = getBlocksByClientId(\n\t\t\t\t\t\tselectedBlockClientIds\n\t\t\t\t\t);\n\t\t\t\t\tconst serialized = serialize( blocks );\n\n\t\t\t\t\tevent.clipboardData.setData( 'text/plain', serialized );\n\t\t\t\t\tevent.clipboardData.setData( 'text/html', serialized );\n\t\t\t\t}\n\n\t\t\t\tif ( event.type === 'cut' ) {\n\t\t\t\t\tremoveBlocks( selectedBlockClientIds );\n\t\t\t\t} else if ( event.type === 'paste' ) {\n\t\t\t\t\tconst { plainText, html } = getPasteEventData( event );\n\t\t\t\t\tconst blocks = pasteHandler( {\n\t\t\t\t\t\tHTML: html,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t\tmode: 'BLOCKS',\n\t\t\t\t\t\tcanUserUseUnfilteredHTML,\n\t\t\t\t\t} );\n\n\t\t\t\t\treplaceBlocks( selectedBlockClientIds, blocks );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n] )( CopyHandler );\n"]}