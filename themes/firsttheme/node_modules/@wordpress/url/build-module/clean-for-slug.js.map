{"version":3,"sources":["@wordpress/url/src/clean-for-slug.js"],"names":["deburr","toLower","trim","cleanForSlug","string","replace"],"mappings":"AAAA;;;AAGA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,QAAtC;AAEA;;;;;;;;;;;;;;;;;AAgBA,OAAO,SAASC,YAAT,CAAuBC,MAAvB,EAAgC;AACtC,MAAK,CAAEA,MAAP,EAAgB;AACf,WAAO,EAAP;AACA;;AACD,SAAOH,OAAO,CACbD,MAAM,CAAEE,IAAI,CAAEE,MAAM,CAACC,OAAP,CAAgB,YAAhB,EAA8B,GAA9B,CAAF,EAAuC,GAAvC,CAAN,CADO,CAAd;AAGA","sourcesContent":["/**\n * External dependencies\n */\nimport { deburr, toLower, trim } from 'lodash';\n\n/**\n * Performs some basic cleanup of a string for use as a post slug.\n *\n * This replicates some of what `sanitize_title()` does in WordPress core, but\n * is only designed to approximate what the slug will be.\n *\n * Converts whitespace, periods, forward slashes and underscores to hyphens.\n * Converts Latin-1 Supplement and Latin Extended-A letters to basic Latin\n * letters. Removes combining diacritical marks. Converts remaining string\n * to lowercase. It does not touch octets, HTML entities, or other encoded\n * characters.\n *\n * @param {string} string Title or slug to be processed.\n *\n * @return {string} Processed string.\n */\nexport function cleanForSlug( string ) {\n\tif ( ! string ) {\n\t\treturn '';\n\t}\n\treturn toLower(\n\t\tdeburr( trim( string.replace( /[\\s\\./_]+/g, '-' ), '-' ) )\n\t);\n}\n"]}