{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot.js"],"names":["useRef","useLayoutEffect","useContext","isShallowEqual","SlotFillContext","useSlot","Slot","name","fillProps","as","Component","props","registry","ref","slot","registerSlot","unregisterSlot","updateSlot"],"mappings":";;;;AAAA;;;AAGA,SAASA,MAAT,EAAiBC,eAAjB,EAAkCC,UAAlC,QAAoD,oBAApD;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA;;;;AAGA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,eAAe,SAASC,IAAT,OAKX;AAAA,MAJHC,IAIG,QAJHA,IAIG;AAAA,4BAHHC,SAGG;AAAA,MAHHA,SAGG,+BAHS,EAGT;AAAA,qBAFHC,EAEG;AAAA,MAFCC,SAED,wBAFa,KAEb;AAAA,MADAC,KACA;;AACH,MAAMC,QAAQ,GAAGV,UAAU,CAAEE,eAAF,CAA3B;AACA,MAAMS,GAAG,GAAGb,MAAM,EAAlB;AACA,MAAMc,IAAI,GAAGT,OAAO,CAAEE,IAAF,CAApB;AAEAN,EAAAA,eAAe,CAAE,YAAM;AACtBW,IAAAA,QAAQ,CAACG,YAAT,CAAuBR,IAAvB,EAA6BM,GAA7B,EAAkCL,SAAlC;AACA,WAAO,YAAM;AACZI,MAAAA,QAAQ,CAACI,cAAT,CAAyBT,IAAzB,EAA+BM,GAA/B;AACA,KAFD,CAFsB,CAKtB;AACA;AACA;AACA;AACA,GATc,EASZ,CAAED,QAAQ,CAACG,YAAX,EAAyBH,QAAQ,CAACI,cAAlC,EAAkDT,IAAlD,CATY,CAAf,CALG,CAgBH;AACA;;AACAN,EAAAA,eAAe,CAAE,YAAM;AACtB,QAAKa,IAAI,CAACN,SAAL,IAAkB,CAAEL,cAAc,CAAEW,IAAI,CAACN,SAAP,EAAkBA,SAAlB,CAAvC,EAAuE;AACtEI,MAAAA,QAAQ,CAACK,UAAT,CAAqBV,IAArB,EAA2BM,GAA3B,EAAgCL,SAAhC;AACA;AACD,GAJc,CAAf;AAMA,SAAO,cAAC,SAAD;AAAW,IAAA,GAAG,EAAGK;AAAjB,KAA4BF,KAA5B,EAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useContext } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\nimport useSlot from './use-slot';\n\nexport default function Slot( {\n\tname,\n\tfillProps = {},\n\tas: Component = 'div',\n\t...props\n} ) {\n\tconst registry = useContext( SlotFillContext );\n\tconst ref = useRef();\n\tconst slot = useSlot( name );\n\n\tuseLayoutEffect( () => {\n\t\tregistry.registerSlot( name, ref, fillProps );\n\t\treturn () => {\n\t\t\tregistry.unregisterSlot( name, ref );\n\t\t};\n\t\t// We are not including fillProps in the deps because we don't want to\n\t\t// unregister and register the slot whenever fillProps change, which would\n\t\t// cause the fill to be re-mounted. We are only considering the initial value\n\t\t// of fillProps.\n\t}, [ registry.registerSlot, registry.unregisterSlot, name ] );\n\n\t// fillProps may be an update that interact with the layout, so\n\t// we useLayoutEffect\n\tuseLayoutEffect( () => {\n\t\tif ( slot.fillProps && ! isShallowEqual( slot.fillProps, fillProps ) ) {\n\t\t\tregistry.updateSlot( name, ref, fillProps );\n\t\t}\n\t} );\n\n\treturn <Component ref={ ref } { ...props } />;\n}\n"]}