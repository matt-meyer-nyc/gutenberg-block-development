{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot-fill-provider.js"],"names":["useMemo","useCallback","useState","SlotFillContext","useSlotRegistry","slots","setSlots","fills","setFills","registerSlot","name","ref","fillProps","prevSlots","unregisterSlot","slot","nextSlots","registerFill","prevFills","unregisterFill","filter","fillRef","registry","updateSlot","SlotFillProvider","children"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction useSlotRegistry() {\n\tconst [ slots, setSlots ] = useState( {} );\n\tconst [ fills, setFills ] = useState( {} );\n\n\tconst registerSlot = useCallback( ( name, ref, fillProps ) => {\n\t\tsetSlots( ( prevSlots ) => ( {\n\t\t\t...prevSlots,\n\t\t\t[ name ]: {\n\t\t\t\t...prevSlots[ name ],\n\t\t\t\tref: ref || prevSlots[ name ].ref,\n\t\t\t\tfillProps: fillProps || prevSlots[ name ].fillProps || {},\n\t\t\t},\n\t\t} ) );\n\t}, [] );\n\n\tconst unregisterSlot = useCallback( ( name, ref ) => {\n\t\tsetSlots( ( prevSlots ) => {\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tconst { [ name ]: slot, ...nextSlots } = prevSlots;\n\t\t\t// Make sure we're not unregistering a slot registered by another element\n\t\t\t// See https://github.com/WordPress/gutenberg/pull/19242#issuecomment-590295412\n\t\t\tif ( slot?.ref === ref ) {\n\t\t\t\treturn nextSlots;\n\t\t\t}\n\t\t\treturn prevSlots;\n\t\t} );\n\t}, [] );\n\n\tconst registerFill = useCallback( ( name, ref ) => {\n\t\tsetFills( ( prevFills ) => ( {\n\t\t\t...prevFills,\n\t\t\t[ name ]: [ ...( prevFills[ name ] || [] ), ref ],\n\t\t} ) );\n\t}, [] );\n\n\tconst unregisterFill = useCallback( ( name, ref ) => {\n\t\tsetFills( ( prevFills ) => {\n\t\t\tif ( prevFills[ name ] ) {\n\t\t\t\treturn {\n\t\t\t\t\t...prevFills,\n\t\t\t\t\t[ name ]: prevFills[ name ].filter(\n\t\t\t\t\t\t( fillRef ) => fillRef !== ref\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn prevFills;\n\t\t} );\n\t}, [] );\n\n\t// Memoizing the return value so it can be directly passed to Provider value\n\tconst registry = useMemo(\n\t\t() => ( {\n\t\t\tslots,\n\t\t\tfills,\n\t\t\tregisterSlot,\n\t\t\t// Just for readability\n\t\t\tupdateSlot: registerSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t} ),\n\t\t[\n\t\t\tslots,\n\t\t\tfills,\n\t\t\tregisterSlot,\n\t\t\tunregisterSlot,\n\t\t\tregisterFill,\n\t\t\tunregisterFill,\n\t\t]\n\t);\n\n\treturn registry;\n}\n\nexport default function SlotFillProvider( { children } ) {\n\tconst registry = useSlotRegistry();\n\treturn (\n\t\t<SlotFillContext.Provider value={ registry }>\n\t\t\t{ children }\n\t\t</SlotFillContext.Provider>\n\t);\n}\n"]}