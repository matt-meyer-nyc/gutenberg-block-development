{"version":3,"sources":["@wordpress/editor/src/components/post-publish-panel/postpublish.js"],"names":["get","PanelBody","Button","ClipboardButton","TextControl","__","sprintf","Component","createRef","withSelect","safeDecodeURIComponent","decodeEntities","PostScheduleLabel","PostPublishPanelPostpublish","arguments","state","showCopyConfirmation","onCopy","bind","onSelectInput","postLink","props","focusOnMount","current","focus","clearTimeout","dismissCopyConfirmation","setState","setTimeout","event","target","select","children","isScheduled","post","postType","postLabel","viewPostLabel","postPublishNonLinkHeader","link","title","getEditedPostAttribute","getCurrentPost","isCurrentPostScheduled","getPostType"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tButton,\n\tClipboardButton,\n\tTextControl,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { safeDecodeURIComponent } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = get( postType, [ 'labels', 'singular_name' ] );\n\t\tconst viewPostLabel = get( postType, [ 'labels', 'view_item' ] );\n\n\t\tconst postPublishNonLinkHeader = isScheduled ? (\n\t\t\t<>\n\t\t\t\t{ __( 'is now scheduled. It will go live on' ) }{ ' ' }\n\t\t\t\t<PostScheduleLabel />.\n\t\t\t</>\n\t\t) : (\n\t\t\t__( 'is now live.' )\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ post.link }>\n\t\t\t\t\t\t{ decodeEntities( post.title ) || __( '(no title)' ) }\n\t\t\t\t\t</a>{ ' ' }\n\t\t\t\t\t{ postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'Whatâ€™s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t__( '%s address' ),\n\t\t\t\t\t\t\tpostLabel\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ safeDecodeURIComponent( post.link ) }\n\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button isSecondary href={ post.link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<ClipboardButton\n\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\ttext={ post.link }\n\t\t\t\t\t\t\tonCopy={ this.onCopy }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ this.state.showCopyConfirmation\n\t\t\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t\t\t: __( 'Copy Link' ) }\n\t\t\t\t\t\t</ClipboardButton>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetEditedPostAttribute,\n\t\tgetCurrentPost,\n\t\tisCurrentPostScheduled,\n\t} = select( 'core/editor' );\n\tconst { getPostType } = select( 'core' );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n"]}