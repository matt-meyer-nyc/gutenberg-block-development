{"version":3,"sources":["@wordpress/editor/src/components/reusable-blocks-buttons/reusable-block-delete-button.js"],"names":["noop","compose","MenuItem","__","isReusableBlock","withSelect","withDispatch","close","ReusableBlockDeleteButton","isVisible","isDisabled","onDelete","select","clientId","getBlock","canUser","getReusableBlock","__experimentalGetReusableBlock","block","reusableBlock","attributes","ref","id","isTemporary","dispatch","onToggle","deleteReusableBlock","__experimentalDeleteReusableBlock","hasConfirmed","window","confirm"],"mappings":";;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAO,SAASC,yBAAT,OAIH;AAAA,MAHHC,SAGG,QAHHA,SAGG;AAAA,MAFHC,UAEG,QAFHA,UAEG;AAAA,MADHC,QACG,QADHA,QACG;;AACH,MAAK,CAAEF,SAAP,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,SACC,cAAC,QAAD;AACC,IAAA,IAAI,EAAGF,KADR;AAEC,IAAA,QAAQ,EAAGG,UAFZ;AAGC,IAAA,OAAO,EAAG;AAAA,aAAMC,QAAQ,EAAd;AAAA;AAHX,KAKGR,EAAE,CAAE,6BAAF,CALL,CADD;AASA;AAED,eAAeF,OAAO,CAAE,CACvBI,UAAU,CAAE,UAAEO,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBAClBD,MAAM,CAAE,mBAAF,CADY;AAAA,MAC/BE,QAD+B,WAC/BA,QAD+B;;AAAA,iBAEnBF,MAAM,CAAE,MAAF,CAFa;AAAA,MAE/BG,OAF+B,YAE/BA,OAF+B;;AAAA,iBAGsBH,MAAM,CAClE,aADkE,CAH5B;AAAA,MAGCI,gBAHD,YAG/BC,8BAH+B;;AAMvC,MAAMC,KAAK,GAAGJ,QAAQ,CAAED,QAAF,CAAtB;AAEA,MAAMM,aAAa,GAClBD,KAAK,IAAId,eAAe,CAAEc,KAAF,CAAxB,GACGF,gBAAgB,CAAEE,KAAK,CAACE,UAAN,CAAiBC,GAAnB,CADnB,GAEG,IAHJ;AAKA,SAAO;AACNZ,IAAAA,SAAS,EACR,CAAC,CAAEU,aAAH,IACA,CAAC,CAAEJ,OAAO,CAAE,QAAF,EAAY,QAAZ,EAAsBI,aAAa,CAACG,EAApC,CAHL;AAINZ,IAAAA,UAAU,EAAES,aAAa,IAAIA,aAAa,CAACI;AAJrC,GAAP;AAMA,CAnBS,CADa,EAqBvBjB,YAAY,CAAE,UAAEkB,QAAF,gBAA2D;AAAA,MAA7CX,QAA6C,SAA7CA,QAA6C;AAAA,6BAAnCY,QAAmC;AAAA,MAAnCA,QAAmC,+BAAxBzB,IAAwB;AAAA,MAAdY,MAAc,SAAdA,MAAc;;AAAA,kBAGpEY,QAAQ,CAAE,aAAF,CAH4D;AAAA,MAEpCE,mBAFoC,aAEvEC,iCAFuE;;AAAA,iBAInDf,MAAM,CAAE,mBAAF,CAJ6C;AAAA,MAIhEE,QAJgE,YAIhEA,QAJgE;;AAMxE,SAAO;AACNH,IAAAA,QADM,sBACK;AACV;AACA;AACA,UAAMiB,YAAY,GAAGC,MAAM,CAACC,OAAP,CACpB3B,EAAE,CACD,6DACC,sEAFA,CADkB,CAArB;;AAOA,UAAKyB,YAAL,EAAoB;AACnB,YAAMV,KAAK,GAAGJ,QAAQ,CAAED,QAAF,CAAtB;AACAa,QAAAA,mBAAmB,CAAER,KAAK,CAACE,UAAN,CAAiBC,GAAnB,CAAnB;AACAI,QAAAA,QAAQ;AACR;AACD;AAhBK,GAAP;AAkBA,CAxBW,CArBW,CAAF,CAAP,CA8CVjB,yBA9CU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { close } from '@wordpress/icons';\n\nexport function ReusableBlockDeleteButton( {\n\tisVisible,\n\tisDisabled,\n\tonDelete,\n} ) {\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<MenuItem\n\t\t\ticon={ close }\n\t\t\tdisabled={ isDisabled }\n\t\t\tonClick={ () => onDelete() }\n\t\t>\n\t\t\t{ __( 'Remove from Reusable blocks' ) }\n\t\t</MenuItem>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlock } = select( 'core/block-editor' );\n\t\tconst { canUser } = select( 'core' );\n\t\tconst { __experimentalGetReusableBlock: getReusableBlock } = select(\n\t\t\t'core/editor'\n\t\t);\n\t\tconst block = getBlock( clientId );\n\n\t\tconst reusableBlock =\n\t\t\tblock && isReusableBlock( block )\n\t\t\t\t? getReusableBlock( block.attributes.ref )\n\t\t\t\t: null;\n\n\t\treturn {\n\t\t\tisVisible:\n\t\t\t\t!! reusableBlock &&\n\t\t\t\t!! canUser( 'delete', 'blocks', reusableBlock.id ),\n\t\t\tisDisabled: reusableBlock && reusableBlock.isTemporary,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId, onToggle = noop }, { select } ) => {\n\t\tconst {\n\t\t\t__experimentalDeleteReusableBlock: deleteReusableBlock,\n\t\t} = dispatch( 'core/editor' );\n\t\tconst { getBlock } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonDelete() {\n\t\t\t\t// TODO: Make this a <Confirm /> component or similar\n\t\t\t\t// eslint-disable-next-line no-alert\n\t\t\t\tconst hasConfirmed = window.confirm(\n\t\t\t\t\t__(\n\t\t\t\t\t\t'Are you sure you want to delete this Reusable Block?\\n\\n' +\n\t\t\t\t\t\t\t'It will be permanently removed from all posts and pages that use it.'\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif ( hasConfirmed ) {\n\t\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\t\tdeleteReusableBlock( block.attributes.ref );\n\t\t\t\t\tonToggle();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n] )( ReusableBlockDeleteButton );\n"]}