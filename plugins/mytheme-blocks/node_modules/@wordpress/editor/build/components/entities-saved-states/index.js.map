{"version":3,"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"names":["EntitiesSavedStatesCheckbox","id","name","rawRecord","changes","checked","setCheckedById","slug","title","nextChecked","EntitiesSavedStates","isOpen","onRequestClose","ignoredForSave","EquivalentKeyMap","entityRecordChangesByRecord","select","getEntityRecordChangesByRecord","saveEditedEntityRecord","checkedById","_setCheckedById","prevCheckedById","nextCheckedById","set","delete","saveCheckedEntities","forEach","_checked","has","filter","s","i","length","Object","keys","map","changedKind","changedName","changedKey","join","get","size"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * WordPress dependencies\n */\nimport { CheckboxControl, Modal, Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\nconst EntitiesSavedStatesCheckbox = ( {\n\tid,\n\tname,\n\tchanges: { rawRecord },\n\tchecked,\n\tsetCheckedById,\n} ) => (\n\t<CheckboxControl\n\t\tlabel={ `${ name }: \"${ rawRecord.name ||\n\t\t\trawRecord.slug ||\n\t\t\trawRecord.title ||\n\t\t\t__( 'Untitled' ) }\"` }\n\t\tchecked={ checked }\n\t\tonChange={ ( nextChecked ) => setCheckedById( id, nextChecked ) }\n\t/>\n);\n\nexport default function EntitiesSavedStates( {\n\tisOpen,\n\tonRequestClose,\n\tignoredForSave = new EquivalentKeyMap(),\n} ) {\n\tconst entityRecordChangesByRecord = useSelect( ( select ) =>\n\t\tselect( 'core' ).getEntityRecordChangesByRecord()\n\t);\n\tconst { saveEditedEntityRecord } = useDispatch( 'core' );\n\n\tconst [ checkedById, _setCheckedById ] = useState(\n\t\t() => new EquivalentKeyMap()\n\t);\n\tconst setCheckedById = ( id, checked ) =>\n\t\t_setCheckedById( ( prevCheckedById ) => {\n\t\t\tconst nextCheckedById = new EquivalentKeyMap( prevCheckedById );\n\t\t\tif ( checked ) {\n\t\t\t\tnextCheckedById.set( id, true );\n\t\t\t} else {\n\t\t\t\tnextCheckedById.delete( id );\n\t\t\t}\n\t\t\treturn nextCheckedById;\n\t\t} );\n\tconst saveCheckedEntities = () => {\n\t\tcheckedById.forEach( ( _checked, id ) => {\n\t\t\tif ( ! ignoredForSave.has( id ) ) {\n\t\t\t\tsaveEditedEntityRecord(\n\t\t\t\t\t...id.filter(\n\t\t\t\t\t\t( s, i ) => i !== id.length - 1 || s !== 'undefined'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\tonRequestClose( checkedById );\n\t};\n\treturn (\n\t\tisOpen && (\n\t\t\t<Modal\n\t\t\t\ttitle={ __( 'What do you want to save?' ) }\n\t\t\t\tonRequestClose={ () => onRequestClose() }\n\t\t\t\tcontentLabel={ __( 'Select items to save.' ) }\n\t\t\t>\n\t\t\t\t{ Object.keys( entityRecordChangesByRecord ).map(\n\t\t\t\t\t( changedKind ) =>\n\t\t\t\t\t\tObject.keys(\n\t\t\t\t\t\t\tentityRecordChangesByRecord[ changedKind ]\n\t\t\t\t\t\t).map( ( changedName ) =>\n\t\t\t\t\t\t\tObject.keys(\n\t\t\t\t\t\t\t\tentityRecordChangesByRecord[ changedKind ][\n\t\t\t\t\t\t\t\t\tchangedName\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t).map( ( changedKey ) => {\n\t\t\t\t\t\t\t\tconst id = [\n\t\t\t\t\t\t\t\t\tchangedKind,\n\t\t\t\t\t\t\t\t\tchangedName,\n\t\t\t\t\t\t\t\t\tchangedKey,\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<EntitiesSavedStatesCheckbox\n\t\t\t\t\t\t\t\t\t\tkey={ id.join( ' | ' ) }\n\t\t\t\t\t\t\t\t\t\tid={ id }\n\t\t\t\t\t\t\t\t\t\tname={ changedName }\n\t\t\t\t\t\t\t\t\t\tchanges={\n\t\t\t\t\t\t\t\t\t\t\tentityRecordChangesByRecord[\n\t\t\t\t\t\t\t\t\t\t\t\tchangedKind\n\t\t\t\t\t\t\t\t\t\t\t][ changedName ][ changedKey ]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchecked={ checkedById.get( id ) }\n\t\t\t\t\t\t\t\t\t\tsetCheckedById={ setCheckedById }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t) }\n\t\t\t\t<Button\n\t\t\t\t\tisPrimary\n\t\t\t\t\tdisabled={ checkedById.size === 0 }\n\t\t\t\t\tonClick={ saveCheckedEntities }\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t</Button>\n\t\t\t</Modal>\n\t\t)\n\t);\n}\n"]}