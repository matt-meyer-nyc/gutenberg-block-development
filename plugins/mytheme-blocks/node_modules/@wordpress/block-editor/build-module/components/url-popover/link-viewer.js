import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
import { ExternalLink, Button } from '@wordpress/components';
import { safeDecodeURI, filterURLForDisplay } from '@wordpress/url';
import { pencil } from '@wordpress/icons';

function LinkViewerUrl(_ref) {
  var url = _ref.url,
      urlLabel = _ref.urlLabel,
      className = _ref.className;
  var linkClassName = classnames(className, 'block-editor-url-popover__link-viewer-url');

  if (!url) {
    return createElement("span", {
      className: linkClassName
    });
  }

  return createElement(ExternalLink, {
    className: linkClassName,
    href: url
  }, urlLabel || filterURLForDisplay(safeDecodeURI(url)));
}

export default function LinkViewer(_ref2) {
  var className = _ref2.className,
      linkClassName = _ref2.linkClassName,
      onEditLinkClick = _ref2.onEditLinkClick,
      url = _ref2.url,
      urlLabel = _ref2.urlLabel,
      props = _objectWithoutProperties(_ref2, ["className", "linkClassName", "onEditLinkClick", "url", "urlLabel"]);

  return createElement("div", _extends({
    className: classnames('block-editor-url-popover__link-viewer', className)
  }, props), createElement(LinkViewerUrl, {
    url: url,
    urlLabel: urlLabel,
    className: linkClassName
  }), onEditLinkClick && createElement(Button, {
    icon: pencil,
    label: __('Edit'),
    onClick: onEditLinkClick
  }));
}
//# sourceMappingURL=link-viewer.js.map