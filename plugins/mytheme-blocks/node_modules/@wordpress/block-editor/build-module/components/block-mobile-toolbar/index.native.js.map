{"version":3,"sources":["@wordpress/block-editor/src/components/block-mobile-toolbar/index.native.js"],"names":["Keyboard","View","ToolbarButton","__","sprintf","withDispatch","withSelect","compose","trash","styles","BlockMover","BlockSettingsButton","BlockMobileToolbar","clientId","onDelete","order","toolbar","spacer","hint","select","getBlockIndex","dispatch","rootClientId","removeBlock","dismiss"],"mappings":";;AAAA;;;AAGA,SAASA,QAAT,EAAmBC,IAAnB,QAA+B,cAA/B;AAEA;;;;AAGA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,mBAAT,QAAoC,mBAApC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAIC,QAAJ,QAAIA,QAAJ;AAAA,MAAcC,QAAd,QAAcA,QAAd;AAAA,MAAwBC,KAAxB,QAAwBA,KAAxB;AAAA,SAC1B,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO;AAArB,KACC,cAAC,UAAD;AAAY,IAAA,SAAS,EAAG,CAAEH,QAAF;AAAxB,IADD,EAGC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGJ,MAAM,CAACQ;AAArB,IAHD,EAKC,cAAC,mBAAD,CAAqB,IAArB,OALD,EAOC,cAAC,aAAD;AACC,IAAA,KAAK,EAAGb,OAAO;AACd;AACAD,IAAAA,EAAE,CAAE,wBAAF,CAFY,EAGdY,KAAK,GAAG,CAHM,CADhB;AAMC,IAAA,OAAO,EAAGD,QANX;AAOC,IAAA,IAAI,EAAGN,KAPR;AAQC,IAAA,UAAU,EAAG;AAAEU,MAAAA,IAAI,EAAEf,EAAE,CAAE,gCAAF;AAAV;AARd,IAPD,CAD0B;AAAA,CAA3B;;AAqBA,eAAeI,OAAO,CACrBD,UAAU,CAAE,UAAEa,MAAF,SAA4B;AAAA,MAAhBN,QAAgB,SAAhBA,QAAgB;;AAAA,gBACbM,MAAM,CAAE,mBAAF,CADO;AAAA,MAC/BC,aAD+B,WAC/BA,aAD+B;;AAGvC,SAAO;AACNL,IAAAA,KAAK,EAAEK,aAAa,CAAEP,QAAF;AADd,GAAP;AAGA,CANS,CADW,EAQrBR,YAAY,CAAE,UAAEgB,QAAF,SAA4C;AAAA,MAA9BR,QAA8B,SAA9BA,QAA8B;AAAA,MAApBS,YAAoB,SAApBA,YAAoB;;AAAA,kBACjCD,QAAQ,CAAE,mBAAF,CADyB;AAAA,MACjDE,WADiD,aACjDA,WADiD;;AAEzD,SAAO;AACNT,IAAAA,QAAQ,EAAE,oBAAM;AACfd,MAAAA,QAAQ,CAACwB,OAAT;AACAD,MAAAA,WAAW,CAAEV,QAAF,EAAYS,YAAZ,CAAX;AACA;AAJK,GAAP;AAMA,CARW,CARS,CAAP,CAiBZV,kBAjBY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { Keyboard, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { ToolbarButton } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { trash } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\nimport BlockMover from '../block-mover';\nimport { BlockSettingsButton } from '../block-settings';\n\nconst BlockMobileToolbar = ( { clientId, onDelete, order } ) => (\n\t<View style={ styles.toolbar }>\n\t\t<BlockMover clientIds={ [ clientId ] } />\n\n\t\t<View style={ styles.spacer } />\n\n\t\t<BlockSettingsButton.Slot />\n\n\t\t<ToolbarButton\n\t\t\ttitle={ sprintf(\n\t\t\t\t/* translators: accessibility text. %s: current block position (number). */\n\t\t\t\t__( 'Remove block at row %s' ),\n\t\t\t\torder + 1\n\t\t\t) }\n\t\t\tonClick={ onDelete }\n\t\t\ticon={ trash }\n\t\t\textraProps={ { hint: __( 'Double tap to remove the block' ) } }\n\t\t/>\n\t</View>\n);\n\nexport default compose(\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlockIndex } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\torder: getBlockIndex( clientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId, rootClientId } ) => {\n\t\tconst { removeBlock } = dispatch( 'core/block-editor' );\n\t\treturn {\n\t\t\tonDelete: () => {\n\t\t\t\tKeyboard.dismiss();\n\t\t\t\tremoveBlock( clientId, rootClientId );\n\t\t\t},\n\t\t};\n\t} )\n)( BlockMobileToolbar );\n"]}