{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu.native.js"],"names":["InserterMenu","arguments","onClose","bind","onLayout","state","numberOfColumns","calculateNumberOfColumns","props","showInsertionPoint","hideInsertionPoint","bottomSheetWidth","BottomSheet","getWidth","styles","modalItem","itemPaddingLeft","paddingLeft","itemPaddingRight","paddingRight","content","containerPaddingLeft","containerPaddingRight","itemWidth","modalIconWrapper","width","itemTotalWidth","containerTotalWidth","Math","floor","shouldReplaceBlock","insertDefaultBlock","onDismiss","setState","getStylesFromColorScheme","bottomPadding","contentBottomPadding","modalIconWrapperStyle","modalIconWrapperDark","modalIconStyle","modalIcon","modalIconDark","modalItemLabelStyle","modalItemLabel","modalItemLabelDark","items","rowSeparator","item","name","touchableArea","title","onSelect","icon","src","fill","Component","select","clientId","isAppender","rootClientId","getInserterItems","getBlockName","getBlockRootClientId","getBlockSelectionEnd","getSettings","getChildBlockNames","destinationRootClientId","end","undefined","destinationRootBlockName","shouldInsertAtTheTop","__experimentalShouldInsertAtTheTop","rootChildBlocks","dispatch","ownProps","removeBlock","resetBlocks","clearSelectedBlock","insertBlock","getBlockOrder","getBlockCount","count","blockToReplace","insertionIndex","initialAttributes","insertedBlock","withInstanceId","withPreferredColorScheme"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { FlatList, View, Text, TouchableHighlight } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createBlock } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport {\n\twithInstanceId,\n\tcompose,\n\twithPreferredColorScheme,\n} from '@wordpress/compose';\nimport { BottomSheet, Icon } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nexport class InserterMenu extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onClose = this.onClose.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.state = {\n\t\t\tnumberOfColumns: this.calculateNumberOfColumns(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.showInsertionPoint();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.hideInsertionPoint();\n\t}\n\n\tcalculateNumberOfColumns() {\n\t\tconst bottomSheetWidth = BottomSheet.getWidth();\n\t\tconst {\n\t\t\tpaddingLeft: itemPaddingLeft,\n\t\t\tpaddingRight: itemPaddingRight,\n\t\t} = styles.modalItem;\n\t\tconst {\n\t\t\tpaddingLeft: containerPaddingLeft,\n\t\t\tpaddingRight: containerPaddingRight,\n\t\t} = styles.content;\n\t\tconst { width: itemWidth } = styles.modalIconWrapper;\n\t\tconst itemTotalWidth = itemWidth + itemPaddingLeft + itemPaddingRight;\n\t\tconst containerTotalWidth =\n\t\t\tbottomSheetWidth - ( containerPaddingLeft + containerPaddingRight );\n\t\treturn Math.floor( containerTotalWidth / itemTotalWidth );\n\t}\n\n\tonClose() {\n\t\t// if should replace but didn't insert any block\n\t\t// re-insert default block\n\t\tif ( this.props.shouldReplaceBlock ) {\n\t\t\tthis.props.insertDefaultBlock();\n\t\t}\n\t\tthis.props.onDismiss();\n\t}\n\n\tonLayout() {\n\t\tconst numberOfColumns = this.calculateNumberOfColumns();\n\t\tthis.setState( { numberOfColumns } );\n\t}\n\n\trender() {\n\t\tconst { getStylesFromColorScheme } = this.props;\n\t\tconst bottomPadding = styles.contentBottomPadding;\n\t\tconst modalIconWrapperStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIconWrapper,\n\t\t\tstyles.modalIconWrapperDark\n\t\t);\n\t\tconst modalIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIcon,\n\t\t\tstyles.modalIconDark\n\t\t);\n\t\tconst modalItemLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalItemLabel,\n\t\t\tstyles.modalItemLabelDark\n\t\t);\n\n\t\treturn (\n\t\t\t<BottomSheet\n\t\t\t\tisVisible={ true }\n\t\t\t\tonClose={ this.onClose }\n\t\t\t\tcontentStyle={ [ styles.content, bottomPadding ] }\n\t\t\t\thideHeader\n\t\t\t>\n\t\t\t\t<FlatList\n\t\t\t\t\tonLayout={ this.onLayout }\n\t\t\t\t\tscrollEnabled={ false }\n\t\t\t\t\tkey={ `InserterUI-${ this.state.numberOfColumns }` } //re-render when numberOfColumns changes\n\t\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t\t\tnumColumns={ this.state.numberOfColumns }\n\t\t\t\t\tdata={ this.props.items }\n\t\t\t\t\tItemSeparatorComponent={ () => (\n\t\t\t\t\t\t<View style={ styles.rowSeparator } />\n\t\t\t\t\t) }\n\t\t\t\t\tkeyExtractor={ ( item ) => item.name }\n\t\t\t\t\trenderItem={ ( { item } ) => (\n\t\t\t\t\t\t<TouchableHighlight\n\t\t\t\t\t\t\tstyle={ styles.touchableArea }\n\t\t\t\t\t\t\tunderlayColor=\"transparent\"\n\t\t\t\t\t\t\tactiveOpacity={ 0.5 }\n\t\t\t\t\t\t\taccessibilityLabel={ item.title }\n\t\t\t\t\t\t\tonPress={ () => this.props.onSelect( item ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<View style={ styles.modalItem }>\n\t\t\t\t\t\t\t\t<View style={ modalIconWrapperStyle }>\n\t\t\t\t\t\t\t\t\t<View style={ modalIconStyle }>\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\ticon={ item.icon.src }\n\t\t\t\t\t\t\t\t\t\t\tfill={ modalIconStyle.fill }\n\t\t\t\t\t\t\t\t\t\t\tsize={ modalIconStyle.width }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t<Text style={ modalItemLabelStyle }>\n\t\t\t\t\t\t\t\t\t{ item.title }\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</BottomSheet>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { clientId, isAppender, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getChildBlockNames } = select( 'core/blocks' );\n\n\t\tlet destinationRootClientId = rootClientId;\n\t\tif ( ! destinationRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\tdestinationRootClientId =\n\t\t\t\t\tgetBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\t\tconst destinationRootBlockName = getBlockName(\n\t\t\tdestinationRootClientId\n\t\t);\n\n\t\tconst {\n\t\t\t__experimentalShouldInsertAtTheTop: shouldInsertAtTheTop,\n\t\t} = getSettings();\n\n\t\treturn {\n\t\t\trootChildBlocks: getChildBlockNames( destinationRootBlockName ),\n\t\t\titems: getInserterItems( destinationRootClientId ),\n\t\t\tdestinationRootClientId,\n\t\t\tshouldInsertAtTheTop,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\tconst {\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t\tremoveBlock,\n\t\t\tresetBlocks,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tinsertDefaultBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tshowInsertionPoint() {\n\t\t\t\tif ( ownProps.shouldReplaceBlock ) {\n\t\t\t\t\tconst { getBlockOrder, getBlockCount } = select(\n\t\t\t\t\t\t'core/block-editor'\n\t\t\t\t\t);\n\n\t\t\t\t\tconst count = getBlockCount();\n\t\t\t\t\tif ( count === 1 ) {\n\t\t\t\t\t\t// removing the last block is not possible with `removeBlock` action\n\t\t\t\t\t\t// it always inserts a default block if the last of the blocks have been removed\n\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t\tresetBlocks( [] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst blockToReplace = getBlockOrder(\n\t\t\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t\t\t)[ ownProps.insertionIndex ];\n\n\t\t\t\t\t\tremoveBlock( blockToReplace, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshowInsertionPoint(\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t\thideInsertionPoint,\n\t\t\tonSelect( item ) {\n\t\t\t\tconst { name, initialAttributes } = item;\n\n\t\t\t\tconst insertedBlock = createBlock( name, initialAttributes );\n\n\t\t\t\tinsertBlock(\n\t\t\t\t\tinsertedBlock,\n\t\t\t\t\townProps.insertionIndex,\n\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t);\n\n\t\t\t\townProps.onSelect();\n\t\t\t},\n\t\t\tinsertDefaultBlock() {\n\t\t\t\tinsertDefaultBlock(\n\t\t\t\t\t{},\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithPreferredColorScheme\n)( InserterMenu );\n"]}